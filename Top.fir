;buildInfoPackage: chisel3, version: 3.2.5, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit Top : 
  module Control : 
    input clock : Clock
    input reset : Reset
    output io : {flip opcode : UInt<7>, validinst : UInt<1>, branch : UInt<1>, memread : UInt<1>, toreg : UInt<2>, add : UInt<1>, memwrite : UInt<1>, regwrite : UInt<1>, immediate : UInt<1>, alusrc1 : UInt<2>, jump : UInt<2>}
    
    node _T = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<6>("h033"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<5>("h013"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_5 = eq(UInt<2>("h03"), _T_4) @[Lookup.scala 31:38]
    node _T_6 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_7 = eq(UInt<6>("h023"), _T_6) @[Lookup.scala 31:38]
    node _T_8 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_9 = eq(UInt<7>("h063"), _T_8) @[Lookup.scala 31:38]
    node _T_10 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_11 = eq(UInt<6>("h037"), _T_10) @[Lookup.scala 31:38]
    node _T_12 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_13 = eq(UInt<5>("h017"), _T_12) @[Lookup.scala 31:38]
    node _T_14 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_15 = eq(UInt<7>("h06f"), _T_14) @[Lookup.scala 31:38]
    node _T_16 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_17 = eq(UInt<7>("h067"), _T_16) @[Lookup.scala 31:38]
    node _T_18 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_19 = eq(UInt<7>("h073"), _T_18) @[Lookup.scala 31:38]
    node _T_20 = mux(_T_19, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_21 = mux(_T_17, UInt<1>("h01"), _T_20) @[Lookup.scala 33:37]
    node _T_22 = mux(_T_15, UInt<1>("h01"), _T_21) @[Lookup.scala 33:37]
    node _T_23 = mux(_T_13, UInt<1>("h01"), _T_22) @[Lookup.scala 33:37]
    node _T_24 = mux(_T_11, UInt<1>("h01"), _T_23) @[Lookup.scala 33:37]
    node _T_25 = mux(_T_9, UInt<1>("h01"), _T_24) @[Lookup.scala 33:37]
    node _T_26 = mux(_T_7, UInt<1>("h01"), _T_25) @[Lookup.scala 33:37]
    node _T_27 = mux(_T_5, UInt<1>("h01"), _T_26) @[Lookup.scala 33:37]
    node _T_28 = mux(_T_3, UInt<1>("h01"), _T_27) @[Lookup.scala 33:37]
    node signals_0 = mux(_T_1, UInt<1>("h01"), _T_28) @[Lookup.scala 33:37]
    node _T_29 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_30 = mux(_T_17, UInt<1>("h00"), _T_29) @[Lookup.scala 33:37]
    node _T_31 = mux(_T_15, UInt<1>("h00"), _T_30) @[Lookup.scala 33:37]
    node _T_32 = mux(_T_13, UInt<1>("h00"), _T_31) @[Lookup.scala 33:37]
    node _T_33 = mux(_T_11, UInt<1>("h00"), _T_32) @[Lookup.scala 33:37]
    node _T_34 = mux(_T_9, UInt<1>("h01"), _T_33) @[Lookup.scala 33:37]
    node _T_35 = mux(_T_7, UInt<1>("h00"), _T_34) @[Lookup.scala 33:37]
    node _T_36 = mux(_T_5, UInt<1>("h00"), _T_35) @[Lookup.scala 33:37]
    node _T_37 = mux(_T_3, UInt<1>("h00"), _T_36) @[Lookup.scala 33:37]
    node signals_1 = mux(_T_1, UInt<1>("h00"), _T_37) @[Lookup.scala 33:37]
    node _T_38 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_39 = mux(_T_17, UInt<1>("h00"), _T_38) @[Lookup.scala 33:37]
    node _T_40 = mux(_T_15, UInt<1>("h00"), _T_39) @[Lookup.scala 33:37]
    node _T_41 = mux(_T_13, UInt<1>("h00"), _T_40) @[Lookup.scala 33:37]
    node _T_42 = mux(_T_11, UInt<1>("h00"), _T_41) @[Lookup.scala 33:37]
    node _T_43 = mux(_T_9, UInt<1>("h00"), _T_42) @[Lookup.scala 33:37]
    node _T_44 = mux(_T_7, UInt<1>("h00"), _T_43) @[Lookup.scala 33:37]
    node _T_45 = mux(_T_5, UInt<1>("h01"), _T_44) @[Lookup.scala 33:37]
    node _T_46 = mux(_T_3, UInt<1>("h00"), _T_45) @[Lookup.scala 33:37]
    node signals_2 = mux(_T_1, UInt<1>("h00"), _T_46) @[Lookup.scala 33:37]
    node _T_47 = mux(_T_19, UInt<2>("h03"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _T_48 = mux(_T_17, UInt<2>("h02"), _T_47) @[Lookup.scala 33:37]
    node _T_49 = mux(_T_15, UInt<2>("h02"), _T_48) @[Lookup.scala 33:37]
    node _T_50 = mux(_T_13, UInt<1>("h00"), _T_49) @[Lookup.scala 33:37]
    node _T_51 = mux(_T_11, UInt<1>("h00"), _T_50) @[Lookup.scala 33:37]
    node _T_52 = mux(_T_9, UInt<1>("h00"), _T_51) @[Lookup.scala 33:37]
    node _T_53 = mux(_T_7, UInt<1>("h00"), _T_52) @[Lookup.scala 33:37]
    node _T_54 = mux(_T_5, UInt<1>("h01"), _T_53) @[Lookup.scala 33:37]
    node _T_55 = mux(_T_3, UInt<1>("h00"), _T_54) @[Lookup.scala 33:37]
    node signals_3 = mux(_T_1, UInt<1>("h00"), _T_55) @[Lookup.scala 33:37]
    node _T_56 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_57 = mux(_T_17, UInt<1>("h00"), _T_56) @[Lookup.scala 33:37]
    node _T_58 = mux(_T_15, UInt<1>("h00"), _T_57) @[Lookup.scala 33:37]
    node _T_59 = mux(_T_13, UInt<1>("h01"), _T_58) @[Lookup.scala 33:37]
    node _T_60 = mux(_T_11, UInt<1>("h01"), _T_59) @[Lookup.scala 33:37]
    node _T_61 = mux(_T_9, UInt<1>("h00"), _T_60) @[Lookup.scala 33:37]
    node _T_62 = mux(_T_7, UInt<1>("h01"), _T_61) @[Lookup.scala 33:37]
    node _T_63 = mux(_T_5, UInt<1>("h01"), _T_62) @[Lookup.scala 33:37]
    node _T_64 = mux(_T_3, UInt<1>("h00"), _T_63) @[Lookup.scala 33:37]
    node signals_4 = mux(_T_1, UInt<1>("h00"), _T_64) @[Lookup.scala 33:37]
    node _T_65 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_66 = mux(_T_17, UInt<1>("h00"), _T_65) @[Lookup.scala 33:37]
    node _T_67 = mux(_T_15, UInt<1>("h00"), _T_66) @[Lookup.scala 33:37]
    node _T_68 = mux(_T_13, UInt<1>("h00"), _T_67) @[Lookup.scala 33:37]
    node _T_69 = mux(_T_11, UInt<1>("h00"), _T_68) @[Lookup.scala 33:37]
    node _T_70 = mux(_T_9, UInt<1>("h00"), _T_69) @[Lookup.scala 33:37]
    node _T_71 = mux(_T_7, UInt<1>("h01"), _T_70) @[Lookup.scala 33:37]
    node _T_72 = mux(_T_5, UInt<1>("h00"), _T_71) @[Lookup.scala 33:37]
    node _T_73 = mux(_T_3, UInt<1>("h00"), _T_72) @[Lookup.scala 33:37]
    node signals_5 = mux(_T_1, UInt<1>("h00"), _T_73) @[Lookup.scala 33:37]
    node _T_74 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_75 = mux(_T_17, UInt<1>("h01"), _T_74) @[Lookup.scala 33:37]
    node _T_76 = mux(_T_15, UInt<1>("h00"), _T_75) @[Lookup.scala 33:37]
    node _T_77 = mux(_T_13, UInt<1>("h01"), _T_76) @[Lookup.scala 33:37]
    node _T_78 = mux(_T_11, UInt<1>("h01"), _T_77) @[Lookup.scala 33:37]
    node _T_79 = mux(_T_9, UInt<1>("h00"), _T_78) @[Lookup.scala 33:37]
    node _T_80 = mux(_T_7, UInt<1>("h01"), _T_79) @[Lookup.scala 33:37]
    node _T_81 = mux(_T_5, UInt<1>("h01"), _T_80) @[Lookup.scala 33:37]
    node _T_82 = mux(_T_3, UInt<1>("h01"), _T_81) @[Lookup.scala 33:37]
    node signals_6 = mux(_T_1, UInt<1>("h00"), _T_82) @[Lookup.scala 33:37]
    node _T_83 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_84 = mux(_T_17, UInt<1>("h01"), _T_83) @[Lookup.scala 33:37]
    node _T_85 = mux(_T_15, UInt<1>("h01"), _T_84) @[Lookup.scala 33:37]
    node _T_86 = mux(_T_13, UInt<1>("h01"), _T_85) @[Lookup.scala 33:37]
    node _T_87 = mux(_T_11, UInt<1>("h01"), _T_86) @[Lookup.scala 33:37]
    node _T_88 = mux(_T_9, UInt<1>("h00"), _T_87) @[Lookup.scala 33:37]
    node _T_89 = mux(_T_7, UInt<1>("h00"), _T_88) @[Lookup.scala 33:37]
    node _T_90 = mux(_T_5, UInt<1>("h01"), _T_89) @[Lookup.scala 33:37]
    node _T_91 = mux(_T_3, UInt<1>("h01"), _T_90) @[Lookup.scala 33:37]
    node signals_7 = mux(_T_1, UInt<1>("h01"), _T_91) @[Lookup.scala 33:37]
    node _T_92 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_93 = mux(_T_17, UInt<1>("h00"), _T_92) @[Lookup.scala 33:37]
    node _T_94 = mux(_T_15, UInt<1>("h01"), _T_93) @[Lookup.scala 33:37]
    node _T_95 = mux(_T_13, UInt<2>("h02"), _T_94) @[Lookup.scala 33:37]
    node _T_96 = mux(_T_11, UInt<1>("h01"), _T_95) @[Lookup.scala 33:37]
    node _T_97 = mux(_T_9, UInt<1>("h00"), _T_96) @[Lookup.scala 33:37]
    node _T_98 = mux(_T_7, UInt<1>("h00"), _T_97) @[Lookup.scala 33:37]
    node _T_99 = mux(_T_5, UInt<1>("h00"), _T_98) @[Lookup.scala 33:37]
    node _T_100 = mux(_T_3, UInt<1>("h00"), _T_99) @[Lookup.scala 33:37]
    node signals_8 = mux(_T_1, UInt<1>("h00"), _T_100) @[Lookup.scala 33:37]
    node _T_101 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_102 = mux(_T_17, UInt<2>("h03"), _T_101) @[Lookup.scala 33:37]
    node _T_103 = mux(_T_15, UInt<2>("h02"), _T_102) @[Lookup.scala 33:37]
    node _T_104 = mux(_T_13, UInt<1>("h00"), _T_103) @[Lookup.scala 33:37]
    node _T_105 = mux(_T_11, UInt<1>("h00"), _T_104) @[Lookup.scala 33:37]
    node _T_106 = mux(_T_9, UInt<1>("h00"), _T_105) @[Lookup.scala 33:37]
    node _T_107 = mux(_T_7, UInt<1>("h00"), _T_106) @[Lookup.scala 33:37]
    node _T_108 = mux(_T_5, UInt<1>("h00"), _T_107) @[Lookup.scala 33:37]
    node _T_109 = mux(_T_3, UInt<1>("h00"), _T_108) @[Lookup.scala 33:37]
    node signals_9 = mux(_T_1, UInt<1>("h00"), _T_109) @[Lookup.scala 33:37]
    io.validinst <= signals_0 @[control.scala 68:16]
    io.branch <= signals_1 @[control.scala 69:13]
    io.memread <= signals_2 @[control.scala 70:14]
    io.toreg <= signals_3 @[control.scala 71:12]
    io.add <= signals_4 @[control.scala 72:10]
    io.memwrite <= signals_5 @[control.scala 73:15]
    io.immediate <= signals_6 @[control.scala 74:16]
    io.regwrite <= signals_7 @[control.scala 75:15]
    io.alusrc1 <= signals_8 @[control.scala 76:14]
    io.jump <= signals_9 @[control.scala 77:11]
    
  module RegisterFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip readreg1 : UInt<5>, flip readreg2 : UInt<5>, flip writereg : UInt<5>, flip writedata : UInt<32>, flip wen : UInt<1>, readdata1 : UInt<32>, readdata2 : UInt<32>}
    
    reg regs : UInt<32>[32], clock @[register-file.scala 49:17]
    when io.wen : @[register-file.scala 52:17]
      regs[io.writereg] <= io.writedata @[register-file.scala 53:23]
      skip @[register-file.scala 52:17]
    io.readdata1 <= regs[io.readreg1] @[register-file.scala 58:16]
    io.readdata2 <= regs[io.readreg2] @[register-file.scala 59:16]
    
  module CSRRegFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip illegal_inst : UInt<1>, flip retire_inst : UInt<1>, flip pc : UInt<32>, flip read_data : UInt<32>, flip inst : UInt<32>, flip immid : UInt<32>, read_illegal : UInt<1>, write_illegal : UInt<1>, system_illegal : UInt<1>, csr_stall : UInt<1>, eret : UInt<1>, evec : UInt<32>, write_data : UInt<32>, reg_write : UInt<1>, status : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}, time : UInt<32>}
    
    io.time is invalid @[csr.scala 205:6]
    io.status.uie is invalid @[csr.scala 205:6]
    io.status.sie is invalid @[csr.scala 205:6]
    io.status.wpri4 is invalid @[csr.scala 205:6]
    io.status.mie is invalid @[csr.scala 205:6]
    io.status.upie is invalid @[csr.scala 205:6]
    io.status.spie is invalid @[csr.scala 205:6]
    io.status.wpri3 is invalid @[csr.scala 205:6]
    io.status.mpie is invalid @[csr.scala 205:6]
    io.status.spp is invalid @[csr.scala 205:6]
    io.status.wpri2 is invalid @[csr.scala 205:6]
    io.status.mpp is invalid @[csr.scala 205:6]
    io.status.fs is invalid @[csr.scala 205:6]
    io.status.xs is invalid @[csr.scala 205:6]
    io.status.mprv is invalid @[csr.scala 205:6]
    io.status.sum is invalid @[csr.scala 205:6]
    io.status.mxr is invalid @[csr.scala 205:6]
    io.status.tvm is invalid @[csr.scala 205:6]
    io.status.tw is invalid @[csr.scala 205:6]
    io.status.tsr is invalid @[csr.scala 205:6]
    io.status.wpri1 is invalid @[csr.scala 205:6]
    io.status.sd is invalid @[csr.scala 205:6]
    io.reg_write is invalid @[csr.scala 205:6]
    io.write_data is invalid @[csr.scala 205:6]
    io.evec is invalid @[csr.scala 205:6]
    io.eret is invalid @[csr.scala 205:6]
    io.csr_stall is invalid @[csr.scala 205:6]
    io.system_illegal is invalid @[csr.scala 205:6]
    io.write_illegal is invalid @[csr.scala 205:6]
    io.read_illegal is invalid @[csr.scala 205:6]
    io.immid is invalid @[csr.scala 205:6]
    io.inst is invalid @[csr.scala 205:6]
    io.read_data is invalid @[csr.scala 205:6]
    io.pc is invalid @[csr.scala 205:6]
    io.retire_inst is invalid @[csr.scala 205:6]
    io.illegal_inst is invalid @[csr.scala 205:6]
    wire _T : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[csr.scala 207:44]
    _T.uie <= UInt<1>("h00") @[csr.scala 207:44]
    _T.sie <= UInt<1>("h00") @[csr.scala 207:44]
    _T.wpri4 <= UInt<1>("h00") @[csr.scala 207:44]
    _T.mie <= UInt<1>("h00") @[csr.scala 207:44]
    _T.upie <= UInt<1>("h00") @[csr.scala 207:44]
    _T.spie <= UInt<1>("h00") @[csr.scala 207:44]
    _T.wpri3 <= UInt<1>("h00") @[csr.scala 207:44]
    _T.mpie <= UInt<1>("h00") @[csr.scala 207:44]
    _T.spp <= UInt<1>("h00") @[csr.scala 207:44]
    _T.wpri2 <= UInt<2>("h00") @[csr.scala 207:44]
    _T.mpp <= UInt<2>("h00") @[csr.scala 207:44]
    _T.fs <= UInt<2>("h00") @[csr.scala 207:44]
    _T.xs <= UInt<2>("h00") @[csr.scala 207:44]
    _T.mprv <= UInt<1>("h00") @[csr.scala 207:44]
    _T.sum <= UInt<1>("h00") @[csr.scala 207:44]
    _T.mxr <= UInt<1>("h00") @[csr.scala 207:44]
    _T.tvm <= UInt<1>("h00") @[csr.scala 207:44]
    _T.tw <= UInt<1>("h00") @[csr.scala 207:44]
    _T.tsr <= UInt<1>("h00") @[csr.scala 207:44]
    _T.wpri1 <= UInt<8>("h00") @[csr.scala 207:44]
    _T.sd <= UInt<1>("h00") @[csr.scala 207:44]
    wire reset_mstatus : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}
    reset_mstatus.uie <= _T.uie
    reset_mstatus.sie <= _T.sie
    reset_mstatus.wpri4 <= _T.wpri4
    reset_mstatus.mie <= _T.mie
    reset_mstatus.upie <= _T.upie
    reset_mstatus.spie <= _T.spie
    reset_mstatus.wpri3 <= _T.wpri3
    reset_mstatus.mpie <= _T.mpie
    reset_mstatus.spp <= _T.spp
    reset_mstatus.wpri2 <= _T.wpri2
    reset_mstatus.mpp <= _T.mpp
    reset_mstatus.fs <= _T.fs
    reset_mstatus.xs <= _T.xs
    reset_mstatus.mprv <= _T.mprv
    reset_mstatus.sum <= _T.sum
    reset_mstatus.mxr <= _T.mxr
    reset_mstatus.tvm <= _T.tvm
    reset_mstatus.tw <= _T.tw
    reset_mstatus.tsr <= _T.tsr
    reset_mstatus.wpri1 <= _T.wpri1
    reset_mstatus.sd <= _T.sd
    reset_mstatus.mpp <= UInt<2>("h03") @[csr.scala 208:21]
    reset_mstatus.mie <= UInt<1>("h01") @[csr.scala 209:21]
    reg reg_mstatus : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}, clock with : (reset => (reset, reset_mstatus)) @[csr.scala 212:28]
    reg reg_mepc : UInt<32>, clock @[csr.scala 214:21]
    wire _T_1 : {interrupt : UInt<1>, exceptioncode : UInt<31>} @[csr.scala 216:40]
    _T_1.exceptioncode <= UInt<31>("h00") @[csr.scala 216:40]
    _T_1.interrupt <= UInt<1>("h00") @[csr.scala 216:40]
    reg reg_mcause : {interrupt : UInt<1>, exceptioncode : UInt<31>}, clock with : (reset => (reset, _T_1)) @[csr.scala 216:27]
    reg reg_mtval : UInt<32>, clock @[csr.scala 218:22]
    reg reg_mscratch : UInt<32>, clock @[csr.scala 220:25]
    reg reg_mtimecmp : UInt<64>, clock @[csr.scala 222:25]
    reg reg_medeleg : UInt<32>, clock @[csr.scala 226:24]
    wire _T_2 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 229:37]
    _T_2.usix <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.ssix <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.wpri4 <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.msix <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.utix <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.stix <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.wpri3 <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.mtix <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.ueix <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.seix <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.wpri2 <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.meix <= UInt<1>("h00") @[csr.scala 229:37]
    _T_2.wpri1 <= UInt<20>("h00") @[csr.scala 229:37]
    reg reg_mip : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>}, clock with : (reset => (reset, _T_2)) @[csr.scala 229:24]
    wire _T_3 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 231:37]
    _T_3.usix <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.ssix <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.wpri4 <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.msix <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.utix <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.stix <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.wpri3 <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.mtix <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.ueix <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.seix <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.wpri2 <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.meix <= UInt<1>("h00") @[csr.scala 231:37]
    _T_3.wpri1 <= UInt<20>("h00") @[csr.scala 231:37]
    reg reg_mie : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>}, clock with : (reset => (reset, _T_3)) @[csr.scala 231:24]
    reg reg_wfi : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 234:24]
    wire _T_4 : {base : UInt<30>, mode : UInt<2>} @[csr.scala 236:39]
    _T_4.mode <= UInt<2>("h00") @[csr.scala 236:39]
    _T_4.base <= UInt<30>("h00") @[csr.scala 236:39]
    reg reg_mtvec : {base : UInt<30>, mode : UInt<2>}, clock with : (reset => (reset, _T_4)) @[csr.scala 236:26]
    reg _T_5 : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[csr.scala 543:41]
    node _T_6 = add(_T_5, UInt<1>("h01")) @[csr.scala 544:33]
    _T_5 <= _T_6 @[csr.scala 545:9]
    reg _T_7 : UInt<58>, clock with : (reset => (reset, UInt<58>("h00"))) @[csr.scala 548:31]
    node _T_8 = bits(_T_6, 6, 6) @[csr.scala 549:20]
    when _T_8 : @[csr.scala 549:34]
      node _T_9 = add(_T_7, UInt<1>("h01")) @[csr.scala 549:43]
      node _T_10 = tail(_T_9, 1) @[csr.scala 549:43]
      _T_7 <= _T_10 @[csr.scala 549:38]
      skip @[csr.scala 549:34]
    node _T_11 = cat(_T_7, _T_5) @[Cat.scala 29:58]
    reg _T_12 : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[csr.scala 543:41]
    node _T_13 = add(_T_12, io.retire_inst) @[csr.scala 544:33]
    _T_12 <= _T_13 @[csr.scala 545:9]
    reg _T_14 : UInt<58>, clock with : (reset => (reset, UInt<58>("h00"))) @[csr.scala 548:31]
    node _T_15 = bits(_T_13, 6, 6) @[csr.scala 549:20]
    when _T_15 : @[csr.scala 549:34]
      node _T_16 = add(_T_14, UInt<1>("h01")) @[csr.scala 549:43]
      node _T_17 = tail(_T_16, 1) @[csr.scala 549:43]
      _T_14 <= _T_17 @[csr.scala 549:38]
      skip @[csr.scala 549:34]
    node _T_18 = cat(_T_14, _T_12) @[Cat.scala 29:58]
    wire _T_19 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 242:49]
    _T_19.cy <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.tmzero <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.ir <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm3 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm4 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm5 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm6 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm7 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm8 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm9 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm10 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm11 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm12 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm13 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm14 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm15 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm16 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm17 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm18 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm19 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm20 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm21 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm22 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm23 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm24 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm25 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm26 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm27 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm28 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm29 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm30 <= UInt<1>("h00") @[csr.scala 242:49]
    _T_19.hpm31 <= UInt<1>("h00") @[csr.scala 242:49]
    reg reg_mcounterinhibit : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>}, clock with : (reset => (reset, _T_19)) @[csr.scala 242:36]
    wire _T_20 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 244:44]
    _T_20.cy <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.tmzero <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.ir <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm3 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm4 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm5 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm6 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm7 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm8 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm9 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm10 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm11 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm12 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm13 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm14 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm15 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm16 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm17 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm18 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm19 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm20 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm21 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm22 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm23 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm24 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm25 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm26 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm27 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm28 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm29 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm30 <= UInt<1>("h00") @[csr.scala 244:44]
    _T_20.hpm31 <= UInt<1>("h00") @[csr.scala 244:44]
    reg reg_mcounteren : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>}, clock with : (reset => (reset, _T_20)) @[csr.scala 244:31]
    node _T_21 = cat(io.status.sie, io.status.uie) @[csr.scala 246:38]
    node _T_22 = cat(io.status.upie, io.status.mie) @[csr.scala 246:38]
    node _T_23 = cat(_T_22, io.status.wpri4) @[csr.scala 246:38]
    node _T_24 = cat(_T_23, _T_21) @[csr.scala 246:38]
    node _T_25 = cat(io.status.wpri3, io.status.spie) @[csr.scala 246:38]
    node _T_26 = cat(io.status.wpri2, io.status.spp) @[csr.scala 246:38]
    node _T_27 = cat(_T_26, io.status.mpie) @[csr.scala 246:38]
    node _T_28 = cat(_T_27, _T_25) @[csr.scala 246:38]
    node _T_29 = cat(_T_28, _T_24) @[csr.scala 246:38]
    node _T_30 = cat(io.status.fs, io.status.mpp) @[csr.scala 246:38]
    node _T_31 = cat(io.status.sum, io.status.mprv) @[csr.scala 246:38]
    node _T_32 = cat(_T_31, io.status.xs) @[csr.scala 246:38]
    node _T_33 = cat(_T_32, _T_30) @[csr.scala 246:38]
    node _T_34 = cat(io.status.tw, io.status.tvm) @[csr.scala 246:38]
    node _T_35 = cat(_T_34, io.status.mxr) @[csr.scala 246:38]
    node _T_36 = cat(io.status.sd, io.status.wpri1) @[csr.scala 246:38]
    node _T_37 = cat(_T_36, io.status.tsr) @[csr.scala 246:38]
    node _T_38 = cat(_T_37, _T_35) @[csr.scala 246:38]
    node _T_39 = cat(_T_38, _T_33) @[csr.scala 246:38]
    node read_mstatus = cat(_T_39, _T_29) @[csr.scala 246:38]
    wire _T_40 : {mxl : UInt<2>, wlrl : UInt<4>, extensions : UInt<26>} @[csr.scala 253:39]
    _T_40.extensions <= UInt<26>("h010") @[csr.scala 253:39]
    _T_40.wlrl <= UInt<4>("h00") @[csr.scala 253:39]
    _T_40.mxl <= UInt<2>("h00") @[csr.scala 253:39]
    reg reg_misa : {mxl : UInt<2>, wlrl : UInt<4>, extensions : UInt<26>}, clock with : (reset => (reset, _T_40)) @[csr.scala 253:25]
    wire _T_41 : {bank : UInt<25>, offset : UInt<7>} @[csr.scala 255:43]
    _T_41.offset <= UInt<7>("h00") @[csr.scala 255:43]
    _T_41.bank <= UInt<25>("h00") @[csr.scala 255:43]
    reg reg_mvendorid : {bank : UInt<25>, offset : UInt<7>}, clock with : (reset => (reset, _T_41)) @[csr.scala 255:30]
    node _T_42 = cat(reg_mcounterinhibit.tmzero, reg_mcounterinhibit.cy) @[csr.scala 260:50]
    node _T_43 = cat(reg_mcounterinhibit.hpm3, reg_mcounterinhibit.ir) @[csr.scala 260:50]
    node _T_44 = cat(_T_43, _T_42) @[csr.scala 260:50]
    node _T_45 = cat(reg_mcounterinhibit.hpm5, reg_mcounterinhibit.hpm4) @[csr.scala 260:50]
    node _T_46 = cat(reg_mcounterinhibit.hpm7, reg_mcounterinhibit.hpm6) @[csr.scala 260:50]
    node _T_47 = cat(_T_46, _T_45) @[csr.scala 260:50]
    node _T_48 = cat(_T_47, _T_44) @[csr.scala 260:50]
    node _T_49 = cat(reg_mcounterinhibit.hpm9, reg_mcounterinhibit.hpm8) @[csr.scala 260:50]
    node _T_50 = cat(reg_mcounterinhibit.hpm11, reg_mcounterinhibit.hpm10) @[csr.scala 260:50]
    node _T_51 = cat(_T_50, _T_49) @[csr.scala 260:50]
    node _T_52 = cat(reg_mcounterinhibit.hpm13, reg_mcounterinhibit.hpm12) @[csr.scala 260:50]
    node _T_53 = cat(reg_mcounterinhibit.hpm15, reg_mcounterinhibit.hpm14) @[csr.scala 260:50]
    node _T_54 = cat(_T_53, _T_52) @[csr.scala 260:50]
    node _T_55 = cat(_T_54, _T_51) @[csr.scala 260:50]
    node _T_56 = cat(_T_55, _T_48) @[csr.scala 260:50]
    node _T_57 = cat(reg_mcounterinhibit.hpm17, reg_mcounterinhibit.hpm16) @[csr.scala 260:50]
    node _T_58 = cat(reg_mcounterinhibit.hpm19, reg_mcounterinhibit.hpm18) @[csr.scala 260:50]
    node _T_59 = cat(_T_58, _T_57) @[csr.scala 260:50]
    node _T_60 = cat(reg_mcounterinhibit.hpm21, reg_mcounterinhibit.hpm20) @[csr.scala 260:50]
    node _T_61 = cat(reg_mcounterinhibit.hpm23, reg_mcounterinhibit.hpm22) @[csr.scala 260:50]
    node _T_62 = cat(_T_61, _T_60) @[csr.scala 260:50]
    node _T_63 = cat(_T_62, _T_59) @[csr.scala 260:50]
    node _T_64 = cat(reg_mcounterinhibit.hpm25, reg_mcounterinhibit.hpm24) @[csr.scala 260:50]
    node _T_65 = cat(reg_mcounterinhibit.hpm27, reg_mcounterinhibit.hpm26) @[csr.scala 260:50]
    node _T_66 = cat(_T_65, _T_64) @[csr.scala 260:50]
    node _T_67 = cat(reg_mcounterinhibit.hpm29, reg_mcounterinhibit.hpm28) @[csr.scala 260:50]
    node _T_68 = cat(reg_mcounterinhibit.hpm31, reg_mcounterinhibit.hpm30) @[csr.scala 260:50]
    node _T_69 = cat(_T_68, _T_67) @[csr.scala 260:50]
    node _T_70 = cat(_T_69, _T_66) @[csr.scala 260:50]
    node _T_71 = cat(_T_70, _T_63) @[csr.scala 260:50]
    node _T_72 = cat(_T_71, _T_56) @[csr.scala 260:50]
    node _T_73 = cat(reg_misa.mxl, reg_misa.wlrl) @[csr.scala 266:28]
    node _T_74 = cat(_T_73, reg_misa.extensions) @[csr.scala 266:28]
    node _T_75 = cat(reg_mip.wpri4, reg_mip.ssix) @[csr.scala 269:32]
    node _T_76 = cat(_T_75, reg_mip.usix) @[csr.scala 269:32]
    node _T_77 = cat(reg_mip.stix, reg_mip.utix) @[csr.scala 269:32]
    node _T_78 = cat(_T_77, reg_mip.msix) @[csr.scala 269:32]
    node _T_79 = cat(_T_78, _T_76) @[csr.scala 269:32]
    node _T_80 = cat(reg_mip.ueix, reg_mip.mtix) @[csr.scala 269:32]
    node _T_81 = cat(_T_80, reg_mip.wpri3) @[csr.scala 269:32]
    node _T_82 = cat(reg_mip.wpri2, reg_mip.seix) @[csr.scala 269:32]
    node _T_83 = cat(reg_mip.wpri1, reg_mip.meix) @[csr.scala 269:32]
    node _T_84 = cat(_T_83, _T_82) @[csr.scala 269:32]
    node _T_85 = cat(_T_84, _T_81) @[csr.scala 269:32]
    node _T_86 = cat(_T_85, _T_79) @[csr.scala 269:32]
    node _T_87 = cat(reg_mie.wpri4, reg_mie.ssix) @[csr.scala 270:32]
    node _T_88 = cat(_T_87, reg_mie.usix) @[csr.scala 270:32]
    node _T_89 = cat(reg_mie.stix, reg_mie.utix) @[csr.scala 270:32]
    node _T_90 = cat(_T_89, reg_mie.msix) @[csr.scala 270:32]
    node _T_91 = cat(_T_90, _T_88) @[csr.scala 270:32]
    node _T_92 = cat(reg_mie.ueix, reg_mie.mtix) @[csr.scala 270:32]
    node _T_93 = cat(_T_92, reg_mie.wpri3) @[csr.scala 270:32]
    node _T_94 = cat(reg_mie.wpri2, reg_mie.seix) @[csr.scala 270:32]
    node _T_95 = cat(reg_mie.wpri1, reg_mie.meix) @[csr.scala 270:32]
    node _T_96 = cat(_T_95, _T_94) @[csr.scala 270:32]
    node _T_97 = cat(_T_96, _T_93) @[csr.scala 270:32]
    node _T_98 = cat(_T_97, _T_91) @[csr.scala 270:32]
    node _T_99 = cat(reg_mcause.interrupt, reg_mcause.exceptioncode) @[csr.scala 274:38]
    wire cmd : UInt<3>
    cmd <= UInt<3>("h03")
    node _T_100 = bits(io.inst, 6, 0) @[csr.scala 284:16]
    node _T_101 = eq(_T_100, UInt<7>("h073")) @[csr.scala 284:23]
    when _T_101 : @[csr.scala 284:42]
      node _T_102 = bits(io.inst, 14, 12) @[csr.scala 285:19]
      node _T_103 = eq(UInt<2>("h03"), _T_102) @[Conditional.scala 37:30]
      when _T_103 : @[Conditional.scala 40:58]
        cmd <= UInt<3>("h03") @[csr.scala 287:13]
        io.reg_write <= UInt<1>("h01") @[csr.scala 288:22]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_104 = eq(UInt<3>("h07"), _T_102) @[Conditional.scala 37:30]
        when _T_104 : @[Conditional.scala 39:67]
          cmd <= UInt<3>("h03") @[csr.scala 291:13]
          io.reg_write <= UInt<1>("h01") @[csr.scala 292:22]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_105 = eq(UInt<2>("h02"), _T_102) @[Conditional.scala 37:30]
          when _T_105 : @[Conditional.scala 39:67]
            cmd <= UInt<3>("h02") @[csr.scala 295:13]
            io.reg_write <= UInt<1>("h01") @[csr.scala 296:22]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_106 = eq(UInt<3>("h06"), _T_102) @[Conditional.scala 37:30]
            when _T_106 : @[Conditional.scala 39:67]
              cmd <= UInt<3>("h02") @[csr.scala 299:13]
              io.reg_write <= UInt<1>("h01") @[csr.scala 300:22]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_107 = eq(UInt<1>("h01"), _T_102) @[Conditional.scala 37:30]
              when _T_107 : @[Conditional.scala 39:67]
                cmd <= UInt<3>("h01") @[csr.scala 303:13]
                io.reg_write <= UInt<1>("h01") @[csr.scala 304:22]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_108 = eq(UInt<3>("h05"), _T_102) @[Conditional.scala 37:30]
                when _T_108 : @[Conditional.scala 39:67]
                  cmd <= UInt<3>("h01") @[csr.scala 307:13]
                  io.reg_write <= UInt<1>("h01") @[csr.scala 308:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_109 = eq(UInt<1>("h00"), _T_102) @[Conditional.scala 37:30]
                  when _T_109 : @[Conditional.scala 39:67]
                    cmd <= UInt<3>("h04") @[csr.scala 311:13]
                    io.reg_write <= UInt<1>("h00") @[csr.scala 312:22]
                    skip @[Conditional.scala 39:67]
      skip @[csr.scala 284:42]
    else : @[csr.scala 315:14]
      cmd <= UInt<3>("h00") @[csr.scala 316:9]
      io.reg_write <= UInt<1>("h00") @[csr.scala 317:18]
      skip @[csr.scala 315:14]
    node csr = bits(io.inst, 31, 20) @[csr.scala 320:20]
    node system_insn = eq(cmd, UInt<3>("h04")) @[csr.scala 321:25]
    node _T_110 = neq(cmd, UInt<3>("h00")) @[csr.scala 322:21]
    node _T_111 = eq(system_insn, UInt<1>("h00")) @[csr.scala 322:40]
    node cpu_ren = and(_T_110, _T_111) @[csr.scala 322:37]
    node _T_112 = eq(csr, UInt<10>("h0320")) @[csr.scala 327:66]
    node _T_113 = eq(csr, UInt<12>("h0b00")) @[csr.scala 327:66]
    node _T_114 = eq(csr, UInt<12>("h0b02")) @[csr.scala 327:66]
    node _T_115 = eq(csr, UInt<12>("h0f13")) @[csr.scala 327:66]
    node _T_116 = eq(csr, UInt<12>("h0f12")) @[csr.scala 327:66]
    node _T_117 = eq(csr, UInt<12>("h0f11")) @[csr.scala 327:66]
    node _T_118 = eq(csr, UInt<10>("h0301")) @[csr.scala 327:66]
    node _T_119 = eq(csr, UInt<10>("h0300")) @[csr.scala 327:66]
    node _T_120 = eq(csr, UInt<10>("h0305")) @[csr.scala 327:66]
    node _T_121 = eq(csr, UInt<10>("h0344")) @[csr.scala 327:66]
    node _T_122 = eq(csr, UInt<10>("h0304")) @[csr.scala 327:66]
    node _T_123 = eq(csr, UInt<10>("h0340")) @[csr.scala 327:66]
    node _T_124 = eq(csr, UInt<10>("h0341")) @[csr.scala 327:66]
    node _T_125 = eq(csr, UInt<10>("h0343")) @[csr.scala 327:66]
    node _T_126 = eq(csr, UInt<10>("h0342")) @[csr.scala 327:66]
    node _T_127 = eq(csr, UInt<12>("h0f14")) @[csr.scala 327:66]
    node _T_128 = eq(csr, UInt<10>("h0302")) @[csr.scala 327:66]
    node _T_129 = eq(csr, UInt<12>("h0b80")) @[csr.scala 327:66]
    node _T_130 = eq(csr, UInt<12>("h0b82")) @[csr.scala 327:66]
    node _T_131 = bits(csr, 9, 8) @[csr.scala 328:44]
    node priv_sufficient = geq(UInt<2>("h03"), _T_131) @[csr.scala 328:38]
    node _T_132 = bits(csr, 11, 10) @[csr.scala 329:22]
    node read_only = eq(_T_132, UInt<2>("h03")) @[csr.scala 329:30]
    node _T_133 = neq(cmd, UInt<3>("h05")) @[csr.scala 330:32]
    node _T_134 = and(cpu_ren, _T_133) @[csr.scala 330:25]
    node cpu_wen = and(_T_134, priv_sufficient) @[csr.scala 330:49]
    node _T_135 = eq(read_only, UInt<1>("h00")) @[csr.scala 331:24]
    node wen = and(cpu_wen, _T_135) @[csr.scala 331:21]
    node _T_136 = bits(io.inst, 14, 14) @[csr.scala 332:84]
    node _T_137 = mux(_T_136, io.immid, io.read_data) @[csr.scala 332:76]
    node _T_138 = eq(cmd, UInt<3>("h02")) @[csr.scala 534:46]
    node _T_139 = eq(cmd, UInt<3>("h03")) @[csr.scala 534:46]
    node _T_140 = or(_T_138, _T_139) @[csr.scala 534:61]
    node _T_141 = mux(_T_140, io.write_data, UInt<1>("h00")) @[csr.scala 534:5]
    node _T_142 = or(_T_141, _T_137) @[csr.scala 534:79]
    node _T_143 = eq(cmd, UInt<3>("h03")) @[csr.scala 534:99]
    node _T_144 = mux(_T_143, _T_137, UInt<1>("h00")) @[csr.scala 534:94]
    node _T_145 = not(_T_144) @[csr.scala 534:90]
    node wdata = and(_T_142, _T_145) @[csr.scala 534:88]
    node _T_146 = bits(csr, 2, 0) @[csr.scala 335:26]
    node opcode = dshl(UInt<1>("h01"), _T_146) @[csr.scala 335:20]
    node _T_147 = bits(opcode, 0, 0) @[csr.scala 336:40]
    node insn_call = and(system_insn, _T_147) @[csr.scala 336:31]
    node _T_148 = bits(opcode, 1, 1) @[csr.scala 337:41]
    node insn_break = and(system_insn, _T_148) @[csr.scala 337:32]
    node _T_149 = bits(opcode, 2, 2) @[csr.scala 338:39]
    node _T_150 = and(system_insn, _T_149) @[csr.scala 338:30]
    node insn_ret = and(_T_150, priv_sufficient) @[csr.scala 338:43]
    node _T_151 = bits(opcode, 5, 5) @[csr.scala 340:39]
    node _T_152 = and(system_insn, _T_151) @[csr.scala 340:30]
    node insn_wfi = and(_T_152, priv_sufficient) @[csr.scala 340:43]
    node _T_153 = bits(csr, 9, 8) @[csr.scala 343:31]
    node _T_154 = lt(UInt<2>("h03"), _T_153) @[csr.scala 343:26]
    node _T_155 = eq(csr, UInt<10>("h0320")) @[csr.scala 342:99]
    node _T_156 = eq(csr, UInt<12>("h0b00")) @[csr.scala 342:99]
    node _T_157 = eq(csr, UInt<12>("h0b02")) @[csr.scala 342:99]
    node _T_158 = eq(csr, UInt<12>("h0f13")) @[csr.scala 342:99]
    node _T_159 = eq(csr, UInt<12>("h0f12")) @[csr.scala 342:99]
    node _T_160 = eq(csr, UInt<12>("h0f11")) @[csr.scala 342:99]
    node _T_161 = eq(csr, UInt<10>("h0301")) @[csr.scala 342:99]
    node _T_162 = eq(csr, UInt<10>("h0300")) @[csr.scala 342:99]
    node _T_163 = eq(csr, UInt<10>("h0305")) @[csr.scala 342:99]
    node _T_164 = eq(csr, UInt<10>("h0344")) @[csr.scala 342:99]
    node _T_165 = eq(csr, UInt<10>("h0304")) @[csr.scala 342:99]
    node _T_166 = eq(csr, UInt<10>("h0340")) @[csr.scala 342:99]
    node _T_167 = eq(csr, UInt<10>("h0341")) @[csr.scala 342:99]
    node _T_168 = eq(csr, UInt<10>("h0343")) @[csr.scala 342:99]
    node _T_169 = eq(csr, UInt<10>("h0342")) @[csr.scala 342:99]
    node _T_170 = eq(csr, UInt<12>("h0f14")) @[csr.scala 342:99]
    node _T_171 = eq(csr, UInt<10>("h0302")) @[csr.scala 342:99]
    node _T_172 = eq(csr, UInt<12>("h0b80")) @[csr.scala 342:99]
    node _T_173 = eq(csr, UInt<12>("h0b82")) @[csr.scala 342:99]
    node _T_174 = or(_T_155, _T_156) @[csr.scala 342:119]
    node _T_175 = or(_T_174, _T_157) @[csr.scala 342:119]
    node _T_176 = or(_T_175, _T_158) @[csr.scala 342:119]
    node _T_177 = or(_T_176, _T_159) @[csr.scala 342:119]
    node _T_178 = or(_T_177, _T_160) @[csr.scala 342:119]
    node _T_179 = or(_T_178, _T_161) @[csr.scala 342:119]
    node _T_180 = or(_T_179, _T_162) @[csr.scala 342:119]
    node _T_181 = or(_T_180, _T_163) @[csr.scala 342:119]
    node _T_182 = or(_T_181, _T_164) @[csr.scala 342:119]
    node _T_183 = or(_T_182, _T_165) @[csr.scala 342:119]
    node _T_184 = or(_T_183, _T_166) @[csr.scala 342:119]
    node _T_185 = or(_T_184, _T_167) @[csr.scala 342:119]
    node _T_186 = or(_T_185, _T_168) @[csr.scala 342:119]
    node _T_187 = or(_T_186, _T_169) @[csr.scala 342:119]
    node _T_188 = or(_T_187, _T_170) @[csr.scala 342:119]
    node _T_189 = or(_T_188, _T_171) @[csr.scala 342:119]
    node _T_190 = or(_T_189, _T_172) @[csr.scala 342:119]
    node _T_191 = or(_T_190, _T_173) @[csr.scala 342:119]
    node _T_192 = eq(_T_191, UInt<1>("h00")) @[csr.scala 343:40]
    node _T_193 = or(_T_154, _T_192) @[csr.scala 343:37]
    io.read_illegal <= _T_193 @[csr.scala 343:19]
    node _T_194 = bits(csr, 11, 10) @[csr.scala 344:26]
    node _T_195 = eq(_T_194, UInt<2>("h03")) @[csr.scala 344:34]
    io.write_illegal <= _T_195 @[csr.scala 344:20]
    node _T_196 = bits(csr, 9, 8) @[csr.scala 345:33]
    node _T_197 = lt(UInt<2>("h03"), _T_196) @[csr.scala 345:28]
    io.system_illegal <= _T_197 @[csr.scala 345:21]
    io.status.uie <= reg_mstatus.uie @[csr.scala 347:13]
    io.status.sie <= reg_mstatus.sie @[csr.scala 347:13]
    io.status.wpri4 <= reg_mstatus.wpri4 @[csr.scala 347:13]
    io.status.mie <= reg_mstatus.mie @[csr.scala 347:13]
    io.status.upie <= reg_mstatus.upie @[csr.scala 347:13]
    io.status.spie <= reg_mstatus.spie @[csr.scala 347:13]
    io.status.wpri3 <= reg_mstatus.wpri3 @[csr.scala 347:13]
    io.status.mpie <= reg_mstatus.mpie @[csr.scala 347:13]
    io.status.spp <= reg_mstatus.spp @[csr.scala 347:13]
    io.status.wpri2 <= reg_mstatus.wpri2 @[csr.scala 347:13]
    io.status.mpp <= reg_mstatus.mpp @[csr.scala 347:13]
    io.status.fs <= reg_mstatus.fs @[csr.scala 347:13]
    io.status.xs <= reg_mstatus.xs @[csr.scala 347:13]
    io.status.mprv <= reg_mstatus.mprv @[csr.scala 347:13]
    io.status.sum <= reg_mstatus.sum @[csr.scala 347:13]
    io.status.mxr <= reg_mstatus.mxr @[csr.scala 347:13]
    io.status.tvm <= reg_mstatus.tvm @[csr.scala 347:13]
    io.status.tw <= reg_mstatus.tw @[csr.scala 347:13]
    io.status.tsr <= reg_mstatus.tsr @[csr.scala 347:13]
    io.status.wpri1 <= reg_mstatus.wpri1 @[csr.scala 347:13]
    io.status.sd <= reg_mstatus.sd @[csr.scala 347:13]
    node _T_198 = or(insn_call, insn_break) @[csr.scala 349:24]
    node _T_199 = or(_T_198, insn_ret) @[csr.scala 349:38]
    io.eret <= _T_199 @[csr.scala 349:11]
    when io.illegal_inst : @[csr.scala 352:26]
      node _T_200 = and(UInt<2>("h02"), UInt<32>("h080000000")) @[csr.scala 353:57]
      reg_mcause.interrupt <= _T_200 @[csr.scala 353:26]
      node _T_201 = and(UInt<2>("h02"), UInt<31>("h07fffffff")) @[csr.scala 354:61]
      reg_mcause.exceptioncode <= _T_201 @[csr.scala 354:30]
      io.evec <= UInt<32>("h080000000") @[csr.scala 355:13]
      reg_mepc <= io.pc @[csr.scala 356:14]
      skip @[csr.scala 352:26]
    node _T_202 = geq(_T_11, reg_mtimecmp) @[csr.scala 381:25]
    when _T_202 : @[csr.scala 381:42]
      reg_mip.mtix <= UInt<1>("h01") @[csr.scala 382:20]
      skip @[csr.scala 381:42]
    node _T_203 = bits(csr, 10, 10) @[csr.scala 386:25]
    node _T_204 = eq(_T_203, UInt<1>("h00")) @[csr.scala 386:21]
    node _T_205 = and(insn_ret, _T_204) @[csr.scala 386:18]
    when _T_205 : @[csr.scala 386:31]
      reg_mstatus.mie <= reg_mstatus.mpie @[csr.scala 387:21]
      reg_mstatus.mpie <= UInt<1>("h01") @[csr.scala 388:22]
      io.evec <= reg_mepc @[csr.scala 389:13]
      skip @[csr.scala 386:31]
    when insn_call : @[csr.scala 393:18]
      io.evec <= UInt<32>("h080000004") @[csr.scala 394:13]
      node _T_206 = and(UInt<4>("h0b"), UInt<32>("h080000000")) @[csr.scala 395:51]
      reg_mcause.interrupt <= _T_206 @[csr.scala 395:26]
      node _T_207 = and(UInt<4>("h0b"), UInt<31>("h07fffffff")) @[csr.scala 396:55]
      reg_mcause.exceptioncode <= _T_207 @[csr.scala 396:30]
      skip @[csr.scala 393:18]
    when insn_break : @[csr.scala 400:19]
      io.evec <= UInt<32>("h080000008") @[csr.scala 401:13]
      node _T_208 = and(UInt<2>("h03"), UInt<32>("h080000000")) @[csr.scala 402:48]
      reg_mcause.interrupt <= _T_208 @[csr.scala 402:26]
      node _T_209 = and(UInt<2>("h03"), UInt<31>("h07fffffff")) @[csr.scala 403:52]
      reg_mcause.exceptioncode <= _T_209 @[csr.scala 403:30]
      skip @[csr.scala 400:19]
    io.time <= _T_11 @[csr.scala 406:11]
    io.csr_stall <= reg_wfi @[csr.scala 407:16]
    node _T_210 = mux(_T_112, _T_72, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_211 = mux(_T_113, _T_11, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_212 = mux(_T_114, _T_18, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_213 = mux(_T_115, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_214 = mux(_T_116, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_215 = mux(_T_117, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_216 = mux(_T_118, _T_74, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_217 = mux(_T_119, read_mstatus, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_218 = mux(_T_120, UInt<32>("h080000000"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_219 = mux(_T_121, _T_86, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_220 = mux(_T_122, _T_98, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_221 = mux(_T_123, reg_mscratch, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_222 = mux(_T_124, reg_mepc, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_223 = mux(_T_125, reg_mtval, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_224 = mux(_T_126, _T_99, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_225 = mux(_T_127, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_226 = mux(_T_128, reg_medeleg, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_227 = mux(_T_129, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_228 = mux(_T_130, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_229 = or(_T_210, _T_211) @[Mux.scala 27:72]
    node _T_230 = or(_T_229, _T_212) @[Mux.scala 27:72]
    node _T_231 = or(_T_230, _T_213) @[Mux.scala 27:72]
    node _T_232 = or(_T_231, _T_214) @[Mux.scala 27:72]
    node _T_233 = or(_T_232, _T_215) @[Mux.scala 27:72]
    node _T_234 = or(_T_233, _T_216) @[Mux.scala 27:72]
    node _T_235 = or(_T_234, _T_217) @[Mux.scala 27:72]
    node _T_236 = or(_T_235, _T_218) @[Mux.scala 27:72]
    node _T_237 = or(_T_236, _T_219) @[Mux.scala 27:72]
    node _T_238 = or(_T_237, _T_220) @[Mux.scala 27:72]
    node _T_239 = or(_T_238, _T_221) @[Mux.scala 27:72]
    node _T_240 = or(_T_239, _T_222) @[Mux.scala 27:72]
    node _T_241 = or(_T_240, _T_223) @[Mux.scala 27:72]
    node _T_242 = or(_T_241, _T_224) @[Mux.scala 27:72]
    node _T_243 = or(_T_242, _T_225) @[Mux.scala 27:72]
    node _T_244 = or(_T_243, _T_226) @[Mux.scala 27:72]
    node _T_245 = or(_T_244, _T_227) @[Mux.scala 27:72]
    node _T_246 = or(_T_245, _T_228) @[Mux.scala 27:72]
    wire _T_247 : UInt<64> @[Mux.scala 27:72]
    _T_247 <= _T_246 @[Mux.scala 27:72]
    io.write_data <= _T_247 @[csr.scala 410:17]
    when wen : @[csr.scala 412:14]
      when _T_119 : @[csr.scala 428:40]
        wire _T_248 : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[csr.scala 429:39]
        wire _T_249 : UInt<32>
        _T_249 <= wdata
        node _T_250 = bits(_T_249, 0, 0) @[csr.scala 429:39]
        _T_248.uie <= _T_250 @[csr.scala 429:39]
        node _T_251 = bits(_T_249, 1, 1) @[csr.scala 429:39]
        _T_248.sie <= _T_251 @[csr.scala 429:39]
        node _T_252 = bits(_T_249, 2, 2) @[csr.scala 429:39]
        _T_248.wpri4 <= _T_252 @[csr.scala 429:39]
        node _T_253 = bits(_T_249, 3, 3) @[csr.scala 429:39]
        _T_248.mie <= _T_253 @[csr.scala 429:39]
        node _T_254 = bits(_T_249, 4, 4) @[csr.scala 429:39]
        _T_248.upie <= _T_254 @[csr.scala 429:39]
        node _T_255 = bits(_T_249, 5, 5) @[csr.scala 429:39]
        _T_248.spie <= _T_255 @[csr.scala 429:39]
        node _T_256 = bits(_T_249, 6, 6) @[csr.scala 429:39]
        _T_248.wpri3 <= _T_256 @[csr.scala 429:39]
        node _T_257 = bits(_T_249, 7, 7) @[csr.scala 429:39]
        _T_248.mpie <= _T_257 @[csr.scala 429:39]
        node _T_258 = bits(_T_249, 8, 8) @[csr.scala 429:39]
        _T_248.spp <= _T_258 @[csr.scala 429:39]
        node _T_259 = bits(_T_249, 10, 9) @[csr.scala 429:39]
        _T_248.wpri2 <= _T_259 @[csr.scala 429:39]
        node _T_260 = bits(_T_249, 12, 11) @[csr.scala 429:39]
        _T_248.mpp <= _T_260 @[csr.scala 429:39]
        node _T_261 = bits(_T_249, 14, 13) @[csr.scala 429:39]
        _T_248.fs <= _T_261 @[csr.scala 429:39]
        node _T_262 = bits(_T_249, 16, 15) @[csr.scala 429:39]
        _T_248.xs <= _T_262 @[csr.scala 429:39]
        node _T_263 = bits(_T_249, 17, 17) @[csr.scala 429:39]
        _T_248.mprv <= _T_263 @[csr.scala 429:39]
        node _T_264 = bits(_T_249, 18, 18) @[csr.scala 429:39]
        _T_248.sum <= _T_264 @[csr.scala 429:39]
        node _T_265 = bits(_T_249, 19, 19) @[csr.scala 429:39]
        _T_248.mxr <= _T_265 @[csr.scala 429:39]
        node _T_266 = bits(_T_249, 20, 20) @[csr.scala 429:39]
        _T_248.tvm <= _T_266 @[csr.scala 429:39]
        node _T_267 = bits(_T_249, 21, 21) @[csr.scala 429:39]
        _T_248.tw <= _T_267 @[csr.scala 429:39]
        node _T_268 = bits(_T_249, 22, 22) @[csr.scala 429:39]
        _T_248.tsr <= _T_268 @[csr.scala 429:39]
        node _T_269 = bits(_T_249, 30, 23) @[csr.scala 429:39]
        _T_248.wpri1 <= _T_269 @[csr.scala 429:39]
        node _T_270 = bits(_T_249, 31, 31) @[csr.scala 429:39]
        _T_248.sd <= _T_270 @[csr.scala 429:39]
        reg_mstatus.mie <= _T_248.mie @[csr.scala 430:23]
        reg_mstatus.mpie <= _T_248.mpie @[csr.scala 431:24]
        reg_mstatus.spp <= UInt<1>("h00") @[csr.scala 433:23]
        reg_mstatus.uie <= UInt<1>("h00") @[csr.scala 434:23]
        reg_mstatus.upie <= UInt<1>("h00") @[csr.scala 435:24]
        reg_mstatus.mprv <= UInt<1>("h00") @[csr.scala 436:24]
        reg_mstatus.mxr <= UInt<1>("h00") @[csr.scala 437:23]
        reg_mstatus.sum <= UInt<1>("h00") @[csr.scala 438:23]
        reg_mstatus.tvm <= UInt<1>("h00") @[csr.scala 439:23]
        reg_mstatus.tw <= UInt<1>("h00") @[csr.scala 440:22]
        reg_mstatus.tsr <= UInt<1>("h00") @[csr.scala 441:23]
        reg_mstatus.fs <= UInt<1>("h00") @[csr.scala 442:22]
        reg_mstatus.xs <= UInt<1>("h00") @[csr.scala 443:22]
        reg_mstatus.sd <= UInt<1>("h00") @[csr.scala 444:22]
        skip @[csr.scala 428:40]
      when _T_121 : @[csr.scala 458:36]
        wire _T_271 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 459:35]
        wire _T_272 : UInt<32>
        _T_272 <= wdata
        node _T_273 = bits(_T_272, 0, 0) @[csr.scala 459:35]
        _T_271.usix <= _T_273 @[csr.scala 459:35]
        node _T_274 = bits(_T_272, 1, 1) @[csr.scala 459:35]
        _T_271.ssix <= _T_274 @[csr.scala 459:35]
        node _T_275 = bits(_T_272, 2, 2) @[csr.scala 459:35]
        _T_271.wpri4 <= _T_275 @[csr.scala 459:35]
        node _T_276 = bits(_T_272, 3, 3) @[csr.scala 459:35]
        _T_271.msix <= _T_276 @[csr.scala 459:35]
        node _T_277 = bits(_T_272, 4, 4) @[csr.scala 459:35]
        _T_271.utix <= _T_277 @[csr.scala 459:35]
        node _T_278 = bits(_T_272, 5, 5) @[csr.scala 459:35]
        _T_271.stix <= _T_278 @[csr.scala 459:35]
        node _T_279 = bits(_T_272, 6, 6) @[csr.scala 459:35]
        _T_271.wpri3 <= _T_279 @[csr.scala 459:35]
        node _T_280 = bits(_T_272, 7, 7) @[csr.scala 459:35]
        _T_271.mtix <= _T_280 @[csr.scala 459:35]
        node _T_281 = bits(_T_272, 8, 8) @[csr.scala 459:35]
        _T_271.ueix <= _T_281 @[csr.scala 459:35]
        node _T_282 = bits(_T_272, 9, 9) @[csr.scala 459:35]
        _T_271.seix <= _T_282 @[csr.scala 459:35]
        node _T_283 = bits(_T_272, 10, 10) @[csr.scala 459:35]
        _T_271.wpri2 <= _T_283 @[csr.scala 459:35]
        node _T_284 = bits(_T_272, 11, 11) @[csr.scala 459:35]
        _T_271.meix <= _T_284 @[csr.scala 459:35]
        node _T_285 = bits(_T_272, 31, 12) @[csr.scala 459:35]
        _T_271.wpri1 <= _T_285 @[csr.scala 459:35]
        reg_mip.msix <= _T_271.msix @[csr.scala 460:20]
        reg_mip.seix <= UInt<1>("h00") @[csr.scala 461:20]
        reg_mip.ueix <= UInt<1>("h00") @[csr.scala 462:20]
        reg_mip.stix <= UInt<1>("h00") @[csr.scala 463:20]
        reg_mip.utix <= UInt<1>("h00") @[csr.scala 464:20]
        reg_mip.ssix <= UInt<1>("h00") @[csr.scala 465:20]
        reg_mip.usix <= UInt<1>("h00") @[csr.scala 466:20]
        skip @[csr.scala 458:36]
      when _T_122 : @[csr.scala 473:36]
        wire _T_286 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 474:35]
        wire _T_287 : UInt<32>
        _T_287 <= wdata
        node _T_288 = bits(_T_287, 0, 0) @[csr.scala 474:35]
        _T_286.usix <= _T_288 @[csr.scala 474:35]
        node _T_289 = bits(_T_287, 1, 1) @[csr.scala 474:35]
        _T_286.ssix <= _T_289 @[csr.scala 474:35]
        node _T_290 = bits(_T_287, 2, 2) @[csr.scala 474:35]
        _T_286.wpri4 <= _T_290 @[csr.scala 474:35]
        node _T_291 = bits(_T_287, 3, 3) @[csr.scala 474:35]
        _T_286.msix <= _T_291 @[csr.scala 474:35]
        node _T_292 = bits(_T_287, 4, 4) @[csr.scala 474:35]
        _T_286.utix <= _T_292 @[csr.scala 474:35]
        node _T_293 = bits(_T_287, 5, 5) @[csr.scala 474:35]
        _T_286.stix <= _T_293 @[csr.scala 474:35]
        node _T_294 = bits(_T_287, 6, 6) @[csr.scala 474:35]
        _T_286.wpri3 <= _T_294 @[csr.scala 474:35]
        node _T_295 = bits(_T_287, 7, 7) @[csr.scala 474:35]
        _T_286.mtix <= _T_295 @[csr.scala 474:35]
        node _T_296 = bits(_T_287, 8, 8) @[csr.scala 474:35]
        _T_286.ueix <= _T_296 @[csr.scala 474:35]
        node _T_297 = bits(_T_287, 9, 9) @[csr.scala 474:35]
        _T_286.seix <= _T_297 @[csr.scala 474:35]
        node _T_298 = bits(_T_287, 10, 10) @[csr.scala 474:35]
        _T_286.wpri2 <= _T_298 @[csr.scala 474:35]
        node _T_299 = bits(_T_287, 11, 11) @[csr.scala 474:35]
        _T_286.meix <= _T_299 @[csr.scala 474:35]
        node _T_300 = bits(_T_287, 31, 12) @[csr.scala 474:35]
        _T_286.wpri1 <= _T_300 @[csr.scala 474:35]
        reg_mie.meix <= _T_286.meix @[csr.scala 475:20]
        reg_mie.msix <= _T_286.msix @[csr.scala 476:20]
        reg_mie.mtix <= _T_286.mtix @[csr.scala 477:20]
        reg_mip.seix <= UInt<1>("h00") @[csr.scala 478:20]
        reg_mip.ueix <= UInt<1>("h00") @[csr.scala 479:20]
        reg_mip.stix <= UInt<1>("h00") @[csr.scala 480:20]
        reg_mip.utix <= UInt<1>("h00") @[csr.scala 481:20]
        reg_mip.ssix <= UInt<1>("h00") @[csr.scala 482:20]
        reg_mip.usix <= UInt<1>("h00") @[csr.scala 483:20]
        skip @[csr.scala 473:36]
      when _T_112 : @[csr.scala 492:48]
        wire _T_301 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 493:47]
        wire _T_302 : UInt<32>
        _T_302 <= wdata
        node _T_303 = bits(_T_302, 0, 0) @[csr.scala 493:47]
        _T_301.cy <= _T_303 @[csr.scala 493:47]
        node _T_304 = bits(_T_302, 1, 1) @[csr.scala 493:47]
        _T_301.tmzero <= _T_304 @[csr.scala 493:47]
        node _T_305 = bits(_T_302, 2, 2) @[csr.scala 493:47]
        _T_301.ir <= _T_305 @[csr.scala 493:47]
        node _T_306 = bits(_T_302, 3, 3) @[csr.scala 493:47]
        _T_301.hpm3 <= _T_306 @[csr.scala 493:47]
        node _T_307 = bits(_T_302, 4, 4) @[csr.scala 493:47]
        _T_301.hpm4 <= _T_307 @[csr.scala 493:47]
        node _T_308 = bits(_T_302, 5, 5) @[csr.scala 493:47]
        _T_301.hpm5 <= _T_308 @[csr.scala 493:47]
        node _T_309 = bits(_T_302, 6, 6) @[csr.scala 493:47]
        _T_301.hpm6 <= _T_309 @[csr.scala 493:47]
        node _T_310 = bits(_T_302, 7, 7) @[csr.scala 493:47]
        _T_301.hpm7 <= _T_310 @[csr.scala 493:47]
        node _T_311 = bits(_T_302, 8, 8) @[csr.scala 493:47]
        _T_301.hpm8 <= _T_311 @[csr.scala 493:47]
        node _T_312 = bits(_T_302, 9, 9) @[csr.scala 493:47]
        _T_301.hpm9 <= _T_312 @[csr.scala 493:47]
        node _T_313 = bits(_T_302, 10, 10) @[csr.scala 493:47]
        _T_301.hpm10 <= _T_313 @[csr.scala 493:47]
        node _T_314 = bits(_T_302, 11, 11) @[csr.scala 493:47]
        _T_301.hpm11 <= _T_314 @[csr.scala 493:47]
        node _T_315 = bits(_T_302, 12, 12) @[csr.scala 493:47]
        _T_301.hpm12 <= _T_315 @[csr.scala 493:47]
        node _T_316 = bits(_T_302, 13, 13) @[csr.scala 493:47]
        _T_301.hpm13 <= _T_316 @[csr.scala 493:47]
        node _T_317 = bits(_T_302, 14, 14) @[csr.scala 493:47]
        _T_301.hpm14 <= _T_317 @[csr.scala 493:47]
        node _T_318 = bits(_T_302, 15, 15) @[csr.scala 493:47]
        _T_301.hpm15 <= _T_318 @[csr.scala 493:47]
        node _T_319 = bits(_T_302, 16, 16) @[csr.scala 493:47]
        _T_301.hpm16 <= _T_319 @[csr.scala 493:47]
        node _T_320 = bits(_T_302, 17, 17) @[csr.scala 493:47]
        _T_301.hpm17 <= _T_320 @[csr.scala 493:47]
        node _T_321 = bits(_T_302, 18, 18) @[csr.scala 493:47]
        _T_301.hpm18 <= _T_321 @[csr.scala 493:47]
        node _T_322 = bits(_T_302, 19, 19) @[csr.scala 493:47]
        _T_301.hpm19 <= _T_322 @[csr.scala 493:47]
        node _T_323 = bits(_T_302, 20, 20) @[csr.scala 493:47]
        _T_301.hpm20 <= _T_323 @[csr.scala 493:47]
        node _T_324 = bits(_T_302, 21, 21) @[csr.scala 493:47]
        _T_301.hpm21 <= _T_324 @[csr.scala 493:47]
        node _T_325 = bits(_T_302, 22, 22) @[csr.scala 493:47]
        _T_301.hpm22 <= _T_325 @[csr.scala 493:47]
        node _T_326 = bits(_T_302, 23, 23) @[csr.scala 493:47]
        _T_301.hpm23 <= _T_326 @[csr.scala 493:47]
        node _T_327 = bits(_T_302, 24, 24) @[csr.scala 493:47]
        _T_301.hpm24 <= _T_327 @[csr.scala 493:47]
        node _T_328 = bits(_T_302, 25, 25) @[csr.scala 493:47]
        _T_301.hpm25 <= _T_328 @[csr.scala 493:47]
        node _T_329 = bits(_T_302, 26, 26) @[csr.scala 493:47]
        _T_301.hpm26 <= _T_329 @[csr.scala 493:47]
        node _T_330 = bits(_T_302, 27, 27) @[csr.scala 493:47]
        _T_301.hpm27 <= _T_330 @[csr.scala 493:47]
        node _T_331 = bits(_T_302, 28, 28) @[csr.scala 493:47]
        _T_301.hpm28 <= _T_331 @[csr.scala 493:47]
        node _T_332 = bits(_T_302, 29, 29) @[csr.scala 493:47]
        _T_301.hpm29 <= _T_332 @[csr.scala 493:47]
        node _T_333 = bits(_T_302, 30, 30) @[csr.scala 493:47]
        _T_301.hpm30 <= _T_333 @[csr.scala 493:47]
        node _T_334 = bits(_T_302, 31, 31) @[csr.scala 493:47]
        _T_301.hpm31 <= _T_334 @[csr.scala 493:47]
        reg_mcounterinhibit.cy <= _T_301.cy @[csr.scala 494:27]
        reg_mcounterinhibit.tmzero <= _T_301.tmzero @[csr.scala 494:27]
        reg_mcounterinhibit.ir <= _T_301.ir @[csr.scala 494:27]
        reg_mcounterinhibit.hpm3 <= _T_301.hpm3 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm4 <= _T_301.hpm4 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm5 <= _T_301.hpm5 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm6 <= _T_301.hpm6 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm7 <= _T_301.hpm7 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm8 <= _T_301.hpm8 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm9 <= _T_301.hpm9 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm10 <= _T_301.hpm10 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm11 <= _T_301.hpm11 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm12 <= _T_301.hpm12 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm13 <= _T_301.hpm13 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm14 <= _T_301.hpm14 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm15 <= _T_301.hpm15 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm16 <= _T_301.hpm16 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm17 <= _T_301.hpm17 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm18 <= _T_301.hpm18 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm19 <= _T_301.hpm19 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm20 <= _T_301.hpm20 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm21 <= _T_301.hpm21 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm22 <= _T_301.hpm22 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm23 <= _T_301.hpm23 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm24 <= _T_301.hpm24 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm25 <= _T_301.hpm25 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm26 <= _T_301.hpm26 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm27 <= _T_301.hpm27 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm28 <= _T_301.hpm28 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm29 <= _T_301.hpm29 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm30 <= _T_301.hpm30 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm31 <= _T_301.hpm31 @[csr.scala 494:27]
        node _T_335 = eq(reg_mcounterinhibit.cy, UInt<1>("h00")) @[csr.scala 495:36]
        when _T_335 : @[csr.scala 495:49]
          when _T_129 : @[csr.scala 527:29]
            node _T_336 = bits(wdata, 31, 0) @[csr.scala 527:47]
            node _T_337 = bits(_T_11, 31, 0) @[csr.scala 527:84]
            node _T_338 = cat(_T_336, _T_337) @[Cat.scala 29:58]
            _T_5 <= _T_338 @[csr.scala 563:11]
            node _T_339 = shr(_T_338, 6) @[csr.scala 564:28]
            _T_7 <= _T_339 @[csr.scala 564:23]
            skip @[csr.scala 527:29]
          when _T_113 : @[csr.scala 528:29]
            node _T_340 = bits(_T_11, 63, 32) @[csr.scala 528:51]
            node _T_341 = cat(_T_340, wdata) @[Cat.scala 29:58]
            _T_5 <= _T_341 @[csr.scala 563:11]
            node _T_342 = shr(_T_341, 6) @[csr.scala 564:28]
            _T_7 <= _T_342 @[csr.scala 564:23]
            skip @[csr.scala 528:29]
          skip @[csr.scala 495:49]
        node _T_343 = eq(reg_mcounterinhibit.ir, UInt<1>("h00")) @[csr.scala 498:36]
        when _T_343 : @[csr.scala 498:48]
          when _T_130 : @[csr.scala 527:29]
            node _T_344 = bits(wdata, 31, 0) @[csr.scala 527:47]
            node _T_345 = bits(_T_18, 31, 0) @[csr.scala 527:84]
            node _T_346 = cat(_T_344, _T_345) @[Cat.scala 29:58]
            _T_12 <= _T_346 @[csr.scala 563:11]
            node _T_347 = shr(_T_346, 6) @[csr.scala 564:28]
            _T_14 <= _T_347 @[csr.scala 564:23]
            skip @[csr.scala 527:29]
          when _T_114 : @[csr.scala 528:29]
            node _T_348 = bits(_T_18, 63, 32) @[csr.scala 528:51]
            node _T_349 = cat(_T_348, wdata) @[Cat.scala 29:58]
            _T_12 <= _T_349 @[csr.scala 563:11]
            node _T_350 = shr(_T_349, 6) @[csr.scala 564:28]
            _T_14 <= _T_350 @[csr.scala 564:23]
            skip @[csr.scala 528:29]
          skip @[csr.scala 498:48]
        skip @[csr.scala 492:48]
      when _T_123 : @[csr.scala 504:41]
        reg_mscratch <= wdata @[csr.scala 504:56]
        skip @[csr.scala 504:41]
      when _T_124 : @[csr.scala 509:41]
        node _T_351 = bits(wdata, 31, 0) @[csr.scala 509:61]
        node _T_352 = dshr(_T_351, UInt<2>("h02")) @[csr.scala 509:70]
        node _T_353 = dshl(_T_352, UInt<2>("h02")) @[csr.scala 509:78]
        reg_mepc <= _T_353 @[csr.scala 509:52]
        skip @[csr.scala 509:41]
      when _T_126 : @[csr.scala 514:41]
        node _T_354 = and(wdata, UInt<32>("h08000001f")) @[csr.scala 515:38]
        node _T_355 = and(_T_354, UInt<32>("h080000000")) @[csr.scala 515:72]
        reg_mcause.interrupt <= _T_355 @[csr.scala 515:28]
        node _T_356 = and(wdata, UInt<32>("h08000001f")) @[csr.scala 516:42]
        node _T_357 = and(_T_356, UInt<31>("h07fffffff")) @[csr.scala 516:76]
        reg_mcause.exceptioncode <= _T_357 @[csr.scala 516:32]
        skip @[csr.scala 514:41]
      when _T_125 : @[csr.scala 520:41]
        node _T_358 = bits(wdata, 31, 0) @[csr.scala 520:61]
        reg_mtval <= _T_358 @[csr.scala 520:53]
        skip @[csr.scala 520:41]
      when _T_128 : @[csr.scala 521:43]
        node _T_359 = bits(wdata, 31, 0) @[csr.scala 521:65]
        reg_medeleg <= _T_359 @[csr.scala 521:57]
        skip @[csr.scala 521:43]
      skip @[csr.scala 412:14]
    
  module ALUControl : 
    input clock : Clock
    input reset : Reset
    output io : {flip add : UInt<1>, flip immediate : UInt<1>, flip funct7 : UInt<7>, flip funct3 : UInt<3>, operation : UInt<4>}
    
    io.operation <= UInt<4>("h0f") @[alucontrol.scala 30:16]
    when io.add : @[alucontrol.scala 32:17]
      io.operation <= UInt<2>("h02") @[alucontrol.scala 33:18]
      skip @[alucontrol.scala 32:17]
    else : @[alucontrol.scala 34:16]
      node _T = eq(UInt<1>("h00"), io.funct3) @[Conditional.scala 37:30]
      when _T : @[Conditional.scala 40:58]
        node _T_1 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 37:41]
        node _T_2 = or(io.immediate, _T_1) @[alucontrol.scala 37:28]
        when _T_2 : @[alucontrol.scala 37:59]
          io.operation <= UInt<2>("h02") @[alucontrol.scala 38:24]
          skip @[alucontrol.scala 37:59]
        else : @[alucontrol.scala 39:22]
          io.operation <= UInt<2>("h03") @[alucontrol.scala 40:24]
          skip @[alucontrol.scala 39:22]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_3 = eq(UInt<1>("h01"), io.funct3) @[Conditional.scala 37:30]
        when _T_3 : @[Conditional.scala 39:67]
          io.operation <= UInt<3>("h06") @[alucontrol.scala 43:36]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_4 = eq(UInt<2>("h02"), io.funct3) @[Conditional.scala 37:30]
          when _T_4 : @[Conditional.scala 39:67]
            io.operation <= UInt<3>("h04") @[alucontrol.scala 44:36]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_5 = eq(UInt<2>("h03"), io.funct3) @[Conditional.scala 37:30]
            when _T_5 : @[Conditional.scala 39:67]
              io.operation <= UInt<3>("h05") @[alucontrol.scala 45:36]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_6 = eq(UInt<3>("h04"), io.funct3) @[Conditional.scala 37:30]
              when _T_6 : @[Conditional.scala 39:67]
                io.operation <= UInt<4>("h09") @[alucontrol.scala 46:36]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_7 = eq(UInt<3>("h05"), io.funct3) @[Conditional.scala 37:30]
                when _T_7 : @[Conditional.scala 39:67]
                  node _T_8 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 48:25]
                  when _T_8 : @[alucontrol.scala 48:43]
                    io.operation <= UInt<3>("h07") @[alucontrol.scala 49:24]
                    skip @[alucontrol.scala 48:43]
                  else : @[alucontrol.scala 50:22]
                    io.operation <= UInt<4>("h08") @[alucontrol.scala 51:24]
                    skip @[alucontrol.scala 50:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_9 = eq(UInt<3>("h06"), io.funct3) @[Conditional.scala 37:30]
                  when _T_9 : @[Conditional.scala 39:67]
                    io.operation <= UInt<1>("h01") @[alucontrol.scala 54:36]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_10 = eq(UInt<3>("h07"), io.funct3) @[Conditional.scala 37:30]
                    when _T_10 : @[Conditional.scala 39:67]
                      io.operation <= UInt<1>("h00") @[alucontrol.scala 55:36]
                      skip @[Conditional.scala 39:67]
      skip @[alucontrol.scala 34:16]
    
  module ALU : 
    input clock : Clock
    input reset : Reset
    output io : {flip operation : UInt<4>, flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    io.result <= UInt<1>("h00") @[alu.scala 26:13]
    node _T = eq(UInt<1>("h00"), io.operation) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = and(io.inputx, io.inputy) @[alu.scala 30:30]
      io.result <= _T_1 @[alu.scala 30:17]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<1>("h01"), io.operation) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = or(io.inputx, io.inputy) @[alu.scala 33:30]
        io.result <= _T_3 @[alu.scala 33:17]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<2>("h02"), io.operation) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node _T_5 = add(io.inputx, io.inputy) @[alu.scala 36:30]
          node _T_6 = tail(_T_5, 1) @[alu.scala 36:30]
          io.result <= _T_6 @[alu.scala 36:17]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_7 = eq(UInt<2>("h03"), io.operation) @[Conditional.scala 37:30]
          when _T_7 : @[Conditional.scala 39:67]
            node _T_8 = sub(io.inputx, io.inputy) @[alu.scala 39:30]
            node _T_9 = tail(_T_8, 1) @[alu.scala 39:30]
            io.result <= _T_9 @[alu.scala 39:17]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_10 = eq(UInt<3>("h04"), io.operation) @[Conditional.scala 37:30]
            when _T_10 : @[Conditional.scala 39:67]
              node _T_11 = asSInt(io.inputx) @[alu.scala 42:31]
              node _T_12 = asSInt(io.inputy) @[alu.scala 42:50]
              node _T_13 = lt(_T_11, _T_12) @[alu.scala 42:38]
              io.result <= _T_13 @[alu.scala 42:17]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_14 = eq(UInt<3>("h05"), io.operation) @[Conditional.scala 37:30]
              when _T_14 : @[Conditional.scala 39:67]
                node _T_15 = lt(io.inputx, io.inputy) @[alu.scala 45:31]
                io.result <= _T_15 @[alu.scala 45:17]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_16 = eq(UInt<3>("h06"), io.operation) @[Conditional.scala 37:30]
                when _T_16 : @[Conditional.scala 39:67]
                  node _T_17 = bits(io.inputy, 4, 0) @[alu.scala 48:42]
                  node _T_18 = dshl(io.inputx, _T_17) @[alu.scala 48:30]
                  io.result <= _T_18 @[alu.scala 48:17]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_19 = eq(UInt<3>("h07"), io.operation) @[Conditional.scala 37:30]
                  when _T_19 : @[Conditional.scala 39:67]
                    node _T_20 = bits(io.inputy, 4, 0) @[alu.scala 51:42]
                    node _T_21 = dshr(io.inputx, _T_20) @[alu.scala 51:30]
                    io.result <= _T_21 @[alu.scala 51:17]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_22 = eq(UInt<4>("h08"), io.operation) @[Conditional.scala 37:30]
                    when _T_22 : @[Conditional.scala 39:67]
                      node _T_23 = asSInt(io.inputx) @[alu.scala 54:31]
                      node _T_24 = bits(io.inputy, 4, 0) @[alu.scala 54:50]
                      node _T_25 = dshr(_T_23, _T_24) @[alu.scala 54:38]
                      node _T_26 = asUInt(_T_25) @[alu.scala 54:57]
                      io.result <= _T_26 @[alu.scala 54:17]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_27 = eq(UInt<4>("h09"), io.operation) @[Conditional.scala 37:30]
                      when _T_27 : @[Conditional.scala 39:67]
                        node _T_28 = xor(io.inputx, io.inputy) @[alu.scala 57:30]
                        io.result <= _T_28 @[alu.scala 57:17]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_29 = eq(UInt<4>("h0a"), io.operation) @[Conditional.scala 37:30]
                        when _T_29 : @[Conditional.scala 39:67]
                          node _T_30 = or(io.inputx, io.inputy) @[alu.scala 60:32]
                          node _T_31 = not(_T_30) @[alu.scala 60:20]
                          io.result <= _T_31 @[alu.scala 60:17]
                          skip @[Conditional.scala 39:67]
    
  module ImmediateGenerator : 
    input clock : Clock
    input reset : Reset
    output io : {flip instruction : UInt<32>, sextImm : UInt<32>}
    
    io.sextImm <= UInt<1>("h00") @[helpers.scala 42:14]
    node opcode = bits(io.instruction, 6, 0) @[helpers.scala 44:30]
    node _T = eq(UInt<6>("h037"), opcode) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = bits(io.instruction, 31, 12) @[helpers.scala 47:31]
      node _T_2 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 71:12]
      node _T_3 = cat(_T_1, _T_2) @[Cat.scala 29:58]
      io.sextImm <= _T_3 @[helpers.scala 48:18]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = eq(UInt<5>("h017"), opcode) @[Conditional.scala 37:30]
      when _T_4 : @[Conditional.scala 39:67]
        node _T_5 = bits(io.instruction, 31, 12) @[helpers.scala 51:31]
        node _T_6 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 71:12]
        node _T_7 = cat(_T_5, _T_6) @[Cat.scala 29:58]
        io.sextImm <= _T_7 @[helpers.scala 52:18]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_8 = eq(UInt<7>("h06f"), opcode) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          node _T_9 = bits(io.instruction, 31, 31) @[helpers.scala 55:35]
          node _T_10 = bits(io.instruction, 19, 12) @[helpers.scala 55:55]
          node _T_11 = bits(io.instruction, 20, 20) @[helpers.scala 56:35]
          node _T_12 = bits(io.instruction, 30, 21) @[helpers.scala 56:55]
          node _T_13 = cat(_T_11, _T_12) @[Cat.scala 29:58]
          node _T_14 = cat(_T_9, _T_10) @[Cat.scala 29:58]
          node _T_15 = cat(_T_14, _T_13) @[Cat.scala 29:58]
          node _T_16 = bits(_T_15, 19, 19) @[helpers.scala 57:36]
          node _T_17 = bits(_T_16, 0, 0) @[Bitwise.scala 71:15]
          node _T_18 = mux(_T_17, UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 71:12]
          node _T_19 = cat(_T_18, _T_15) @[Cat.scala 29:58]
          node _T_20 = cat(_T_19, UInt<1>("h00")) @[Cat.scala 29:58]
          io.sextImm <= _T_20 @[helpers.scala 57:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_21 = eq(UInt<7>("h067"), opcode) @[Conditional.scala 37:30]
          when _T_21 : @[Conditional.scala 39:67]
            node _T_22 = bits(io.instruction, 31, 20) @[helpers.scala 60:31]
            node _T_23 = bits(_T_22, 11, 11) @[helpers.scala 61:36]
            node _T_24 = bits(_T_23, 0, 0) @[Bitwise.scala 71:15]
            node _T_25 = mux(_T_24, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 71:12]
            node _T_26 = cat(_T_25, _T_22) @[Cat.scala 29:58]
            io.sextImm <= _T_26 @[helpers.scala 61:18]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_27 = eq(UInt<7>("h063"), opcode) @[Conditional.scala 37:30]
            when _T_27 : @[Conditional.scala 39:67]
              node _T_28 = bits(io.instruction, 31, 31) @[helpers.scala 64:35]
              node _T_29 = bits(io.instruction, 7, 7) @[helpers.scala 64:55]
              node _T_30 = bits(io.instruction, 30, 25) @[helpers.scala 65:35]
              node _T_31 = bits(io.instruction, 11, 8) @[helpers.scala 65:58]
              node _T_32 = cat(_T_30, _T_31) @[Cat.scala 29:58]
              node _T_33 = cat(_T_28, _T_29) @[Cat.scala 29:58]
              node _T_34 = cat(_T_33, _T_32) @[Cat.scala 29:58]
              node _T_35 = bits(_T_34, 11, 11) @[helpers.scala 66:37]
              node _T_36 = bits(_T_35, 0, 0) @[Bitwise.scala 71:15]
              node _T_37 = mux(_T_36, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 71:12]
              node _T_38 = cat(_T_37, _T_34) @[Cat.scala 29:58]
              node _T_39 = cat(_T_38, UInt<1>("h00")) @[Cat.scala 29:58]
              io.sextImm <= _T_39 @[helpers.scala 66:18]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_40 = eq(UInt<2>("h03"), opcode) @[Conditional.scala 37:30]
              when _T_40 : @[Conditional.scala 39:67]
                node _T_41 = bits(io.instruction, 31, 20) @[helpers.scala 69:31]
                node _T_42 = bits(_T_41, 11, 11) @[helpers.scala 70:36]
                node _T_43 = bits(_T_42, 0, 0) @[Bitwise.scala 71:15]
                node _T_44 = mux(_T_43, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 71:12]
                node _T_45 = cat(_T_44, _T_41) @[Cat.scala 29:58]
                io.sextImm <= _T_45 @[helpers.scala 70:18]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_46 = eq(UInt<6>("h023"), opcode) @[Conditional.scala 37:30]
                when _T_46 : @[Conditional.scala 39:67]
                  node _T_47 = bits(io.instruction, 31, 25) @[helpers.scala 73:35]
                  node _T_48 = bits(io.instruction, 11, 7) @[helpers.scala 73:59]
                  node _T_49 = cat(_T_47, _T_48) @[Cat.scala 29:58]
                  node _T_50 = bits(_T_49, 11, 11) @[helpers.scala 74:36]
                  node _T_51 = bits(_T_50, 0, 0) @[Bitwise.scala 71:15]
                  node _T_52 = mux(_T_51, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 71:12]
                  node _T_53 = cat(_T_52, _T_49) @[Cat.scala 29:58]
                  io.sextImm <= _T_53 @[helpers.scala 74:18]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_54 = eq(UInt<5>("h013"), opcode) @[Conditional.scala 37:30]
                  when _T_54 : @[Conditional.scala 39:67]
                    node _T_55 = bits(io.instruction, 31, 20) @[helpers.scala 77:31]
                    node _T_56 = bits(_T_55, 11, 11) @[helpers.scala 78:36]
                    node _T_57 = bits(_T_56, 0, 0) @[Bitwise.scala 71:15]
                    node _T_58 = mux(_T_57, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 71:12]
                    node _T_59 = cat(_T_58, _T_55) @[Cat.scala 29:58]
                    io.sextImm <= _T_59 @[helpers.scala 78:18]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_60 = eq(UInt<7>("h073"), opcode) @[Conditional.scala 37:30]
                    when _T_60 : @[Conditional.scala 39:67]
                      node _T_61 = mux(UInt<1>("h00"), UInt<27>("h07ffffff"), UInt<27>("h00")) @[Bitwise.scala 71:12]
                      node _T_62 = bits(io.instruction, 19, 15) @[helpers.scala 81:53]
                      node _T_63 = cat(_T_61, _T_62) @[Cat.scala 29:58]
                      io.sextImm <= _T_63 @[helpers.scala 81:18]
                      skip @[Conditional.scala 39:67]
    
  module BranchControl : 
    input clock : Clock
    input reset : Reset
    output io : {flip branch : UInt<1>, flip funct3 : UInt<3>, flip inputx : UInt<32>, flip inputy : UInt<32>, taken : UInt<1>}
    
    io.taken is invalid @[branch-control.scala 27:12]
    wire check : UInt<1> @[branch-control.scala 29:19]
    check is invalid @[branch-control.scala 30:9]
    node _T = eq(UInt<1>("h00"), io.funct3) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = eq(io.inputx, io.inputy) @[branch-control.scala 33:40]
      check <= _T_1 @[branch-control.scala 33:26]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<1>("h01"), io.funct3) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = neq(io.inputx, io.inputy) @[branch-control.scala 34:40]
        check <= _T_3 @[branch-control.scala 34:26]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<3>("h04"), io.funct3) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node _T_5 = asSInt(io.inputx) @[branch-control.scala 35:40]
          node _T_6 = asSInt(io.inputy) @[branch-control.scala 35:59]
          node _T_7 = lt(_T_5, _T_6) @[branch-control.scala 35:47]
          check <= _T_7 @[branch-control.scala 35:26]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_8 = eq(UInt<3>("h05"), io.funct3) @[Conditional.scala 37:30]
          when _T_8 : @[Conditional.scala 39:67]
            node _T_9 = asSInt(io.inputx) @[branch-control.scala 36:40]
            node _T_10 = asSInt(io.inputy) @[branch-control.scala 36:60]
            node _T_11 = geq(_T_9, _T_10) @[branch-control.scala 36:47]
            check <= _T_11 @[branch-control.scala 36:26]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = eq(UInt<3>("h06"), io.funct3) @[Conditional.scala 37:30]
            when _T_12 : @[Conditional.scala 39:67]
              node _T_13 = lt(io.inputx, io.inputy) @[branch-control.scala 37:40]
              check <= _T_13 @[branch-control.scala 37:26]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_14 = eq(UInt<3>("h07"), io.funct3) @[Conditional.scala 37:30]
              when _T_14 : @[Conditional.scala 39:67]
                node _T_15 = geq(io.inputx, io.inputy) @[branch-control.scala 38:40]
                check <= _T_15 @[branch-control.scala 38:26]
                skip @[Conditional.scala 39:67]
    node _T_16 = and(check, io.branch) @[branch-control.scala 41:21]
    io.taken <= _T_16 @[branch-control.scala 41:12]
    
  module Adder : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _T = add(io.inputx, io.inputy) @[helpers.scala 23:26]
    node _T_1 = tail(_T, 1) @[helpers.scala 23:26]
    io.result <= _T_1 @[helpers.scala 23:13]
    
  module Adder_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _T = add(io.inputx, io.inputy) @[helpers.scala 23:26]
    node _T_1 = tail(_T, 1) @[helpers.scala 23:26]
    io.result <= _T_1 @[helpers.scala 23:13]
    
  module SingleCycleCPU : 
    input clock : Clock
    input reset : Reset
    output io : {flip imem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>}, flip dmem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}}
    
    reg pc : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[cpu.scala 17:27]
    inst control of Control @[cpu.scala 18:26]
    control.clock <= clock
    control.reset <= reset
    inst registers of RegisterFile @[cpu.scala 19:26]
    registers.clock <= clock
    registers.reset <= reset
    inst csr of CSRRegFile @[cpu.scala 20:26]
    csr.clock <= clock
    csr.reset <= reset
    inst aluControl of ALUControl @[cpu.scala 21:26]
    aluControl.clock <= clock
    aluControl.reset <= reset
    inst alu of ALU @[cpu.scala 22:26]
    alu.clock <= clock
    alu.reset <= reset
    inst immGen of ImmediateGenerator @[cpu.scala 23:26]
    immGen.clock <= clock
    immGen.reset <= reset
    inst branchCtrl of BranchControl @[cpu.scala 24:26]
    branchCtrl.clock <= clock
    branchCtrl.reset <= reset
    inst pcPlusFour of Adder @[cpu.scala 25:26]
    pcPlusFour.clock <= clock
    pcPlusFour.reset <= reset
    inst branchAdd of Adder_1 @[cpu.scala 26:26]
    branchAdd.clock <= clock
    branchAdd.reset <= reset
    reg value : UInt<30>, clock with : (reset => (reset, UInt<30>("h00"))) @[Counter.scala 29:33]
    wire _T : UInt<1>
    _T <= UInt<1>("h00")
    when UInt<1>("h01") : @[Counter.scala 67:17]
      node _T_1 = eq(value, UInt<30>("h03fffffff")) @[Counter.scala 38:24]
      node _T_2 = add(value, UInt<1>("h01")) @[Counter.scala 39:22]
      node _T_3 = tail(_T_2, 1) @[Counter.scala 39:22]
      value <= _T_3 @[Counter.scala 39:13]
      _T <= _T_1 @[Counter.scala 67:24]
      skip @[Counter.scala 67:17]
    io.imem.address <= pc @[cpu.scala 30:19]
    io.imem.valid <= UInt<1>("h01") @[cpu.scala 31:17]
    pcPlusFour.io.inputx <= pc @[cpu.scala 33:24]
    pcPlusFour.io.inputy <= UInt<3>("h04") @[cpu.scala 34:24]
    node opcode = bits(io.imem.instruction, 6, 0) @[cpu.scala 37:27]
    control.io.opcode <= opcode @[cpu.scala 40:21]
    node _T_4 = bits(io.imem.instruction, 19, 15) @[cpu.scala 42:39]
    registers.io.readreg1 <= _T_4 @[cpu.scala 42:25]
    node _T_5 = bits(io.imem.instruction, 24, 20) @[cpu.scala 43:39]
    registers.io.readreg2 <= _T_5 @[cpu.scala 43:25]
    node _T_6 = bits(io.imem.instruction, 11, 7) @[cpu.scala 45:39]
    registers.io.writereg <= _T_6 @[cpu.scala 45:25]
    node _T_7 = or(control.io.regwrite, csr.io.reg_write) @[cpu.scala 46:49]
    node _T_8 = neq(registers.io.writereg, UInt<1>("h00")) @[cpu.scala 46:96]
    node _T_9 = and(_T_7, _T_8) @[cpu.scala 46:70]
    registers.io.wen <= _T_9 @[cpu.scala 46:25]
    aluControl.io.add <= control.io.add @[cpu.scala 48:27]
    aluControl.io.immediate <= control.io.immediate @[cpu.scala 49:27]
    node _T_10 = bits(io.imem.instruction, 31, 25) @[cpu.scala 50:41]
    aluControl.io.funct7 <= _T_10 @[cpu.scala 50:27]
    node _T_11 = bits(io.imem.instruction, 14, 12) @[cpu.scala 51:41]
    aluControl.io.funct3 <= _T_11 @[cpu.scala 51:27]
    immGen.io.instruction <= io.imem.instruction @[cpu.scala 53:25]
    csr.io.inst <= io.imem.instruction @[cpu.scala 57:15]
    csr.io.immid <= immGen.io.sextImm @[cpu.scala 58:16]
    csr.io.read_data <= registers.io.readdata1 @[cpu.scala 59:20]
    csr.io.retire_inst <= UInt<1>("h01") @[cpu.scala 60:22]
    node _T_12 = eq(control.io.validinst, UInt<1>("h00")) @[cpu.scala 61:26]
    node _T_13 = or(_T_12, csr.io.read_illegal) @[cpu.scala 61:48]
    node _T_14 = or(_T_13, csr.io.write_illegal) @[cpu.scala 61:71]
    node _T_15 = or(_T_14, csr.io.system_illegal) @[cpu.scala 61:95]
    csr.io.illegal_inst <= _T_15 @[cpu.scala 61:23]
    csr.io.pc <= pc @[cpu.scala 62:13]
    branchCtrl.io.branch <= control.io.branch @[cpu.scala 64:24]
    node _T_16 = bits(io.imem.instruction, 14, 12) @[cpu.scala 65:38]
    branchCtrl.io.funct3 <= _T_16 @[cpu.scala 65:24]
    branchCtrl.io.inputx <= registers.io.readdata1 @[cpu.scala 66:24]
    branchCtrl.io.inputy <= registers.io.readdata2 @[cpu.scala 67:24]
    wire alu_inputx : UInt @[cpu.scala 69:24]
    node _T_17 = eq(control.io.alusrc1, UInt<2>("h02")) @[cpu.scala 70:28]
    when _T_17 : @[cpu.scala 70:37]
      alu_inputx <= pc @[cpu.scala 71:16]
      skip @[cpu.scala 70:37]
    else : @[cpu.scala 72:44]
      node _T_18 = eq(control.io.alusrc1, UInt<1>("h01")) @[cpu.scala 72:35]
      when _T_18 : @[cpu.scala 72:44]
        alu_inputx <= UInt<1>("h00") @[cpu.scala 73:16]
        skip @[cpu.scala 72:44]
      else : @[cpu.scala 74:16]
        alu_inputx <= registers.io.readdata1 @[cpu.scala 75:16]
        skip @[cpu.scala 74:16]
    node alu_inputy = mux(control.io.immediate, immGen.io.sextImm, registers.io.readdata2) @[cpu.scala 77:23]
    alu.io.inputx <= alu_inputx @[cpu.scala 78:17]
    alu.io.inputy <= alu_inputy @[cpu.scala 79:17]
    alu.io.operation <= aluControl.io.operation @[cpu.scala 80:20]
    io.dmem.address <= alu.io.result @[cpu.scala 83:21]
    io.dmem.writedata <= registers.io.readdata2 @[cpu.scala 84:21]
    io.dmem.memread <= control.io.memread @[cpu.scala 85:21]
    io.dmem.memwrite <= control.io.memwrite @[cpu.scala 86:21]
    node _T_19 = bits(io.imem.instruction, 13, 12) @[cpu.scala 87:35]
    io.dmem.maskmode <= _T_19 @[cpu.scala 87:21]
    node _T_20 = bits(io.imem.instruction, 14, 14) @[cpu.scala 88:36]
    node _T_21 = not(_T_20) @[cpu.scala 88:24]
    io.dmem.sext <= _T_21 @[cpu.scala 88:21]
    node _T_22 = or(io.dmem.memread, io.dmem.memwrite) @[cpu.scala 89:24]
    when _T_22 : @[cpu.scala 89:45]
      io.dmem.valid <= UInt<1>("h01") @[cpu.scala 90:19]
      skip @[cpu.scala 89:45]
    else : @[cpu.scala 91:16]
      io.dmem.valid <= UInt<1>("h00") @[cpu.scala 92:19]
      skip @[cpu.scala 91:16]
    wire write_data : UInt @[cpu.scala 96:24]
    node _T_23 = eq(control.io.toreg, UInt<1>("h01")) @[cpu.scala 97:26]
    when _T_23 : @[cpu.scala 97:35]
      write_data <= io.dmem.readdata @[cpu.scala 98:16]
      skip @[cpu.scala 97:35]
    else : @[cpu.scala 99:42]
      node _T_24 = eq(control.io.toreg, UInt<2>("h02")) @[cpu.scala 99:33]
      when _T_24 : @[cpu.scala 99:42]
        write_data <= pcPlusFour.io.result @[cpu.scala 100:16]
        skip @[cpu.scala 99:42]
      else : @[cpu.scala 101:42]
        node _T_25 = eq(control.io.toreg, UInt<2>("h03")) @[cpu.scala 101:33]
        when _T_25 : @[cpu.scala 101:42]
          write_data <= csr.io.write_data @[cpu.scala 102:16]
          skip @[cpu.scala 101:42]
        else : @[cpu.scala 103:16]
          write_data <= alu.io.result @[cpu.scala 104:16]
          skip @[cpu.scala 103:16]
    registers.io.writedata <= write_data @[cpu.scala 107:26]
    branchAdd.io.inputx <= pc @[cpu.scala 109:23]
    branchAdd.io.inputy <= immGen.io.sextImm @[cpu.scala 110:23]
    wire next_pc : UInt @[cpu.scala 111:21]
    node _T_26 = eq(control.io.jump, UInt<2>("h02")) @[cpu.scala 112:48]
    node _T_27 = or(branchCtrl.io.taken, _T_26) @[cpu.scala 112:29]
    when _T_27 : @[cpu.scala 112:57]
      next_pc <= branchAdd.io.result @[cpu.scala 113:13]
      skip @[cpu.scala 112:57]
    else : @[cpu.scala 114:41]
      node _T_28 = eq(control.io.jump, UInt<2>("h03")) @[cpu.scala 114:32]
      when _T_28 : @[cpu.scala 114:41]
        node _T_29 = mux(UInt<1>("h01"), UInt<31>("h07fffffff"), UInt<31>("h00")) @[Bitwise.scala 71:12]
        node _T_30 = cat(_T_29, UInt<1>("h00")) @[Cat.scala 29:58]
        node _T_31 = and(alu.io.result, _T_30) @[cpu.scala 115:30]
        next_pc <= _T_31 @[cpu.scala 115:13]
        skip @[cpu.scala 114:41]
      else : @[cpu.scala 116:54]
        node _T_32 = eq(control.io.validinst, UInt<1>("h00")) @[cpu.scala 116:31]
        node _T_33 = or(csr.io.eret, _T_32) @[cpu.scala 116:28]
        when _T_33 : @[cpu.scala 116:54]
          next_pc <= csr.io.evec @[cpu.scala 117:13]
          skip @[cpu.scala 116:54]
        else : @[cpu.scala 118:16]
          next_pc <= pcPlusFour.io.result @[cpu.scala 119:13]
          skip @[cpu.scala 118:16]
    pc <= next_pc @[cpu.scala 122:6]
    
  module DualPortedCombinMemory : 
    input clock : Clock
    input reset : Reset
    output io : {imem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}, dmem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    io.imem.request.bits.operation is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.writedata is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.address is invalid @[base-memory-components.scala 32:19]
    io.imem.request.valid is invalid @[base-memory-components.scala 32:19]
    io.imem.request.ready is invalid @[base-memory-components.scala 32:19]
    io.dmem.request.bits.operation is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.writedata is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.address is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.valid is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.ready is invalid @[base-memory-components.scala 33:19]
    wire _T : {valid : UInt<1>, bits : {data : UInt<32>}} @[base-memory-components.scala 36:35]
    _T.bits.data <= UInt<32>("h00") @[base-memory-components.scala 36:35]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 36:35]
    io.imem.response.bits.data <= _T.bits.data @[base-memory-components.scala 36:20]
    io.imem.response.valid <= _T.valid @[base-memory-components.scala 36:20]
    wire _T_1 : {valid : UInt<1>, bits : {data : UInt<32>}} @[base-memory-components.scala 37:35]
    _T_1.bits.data <= UInt<32>("h00") @[base-memory-components.scala 37:35]
    _T_1.valid <= UInt<1>("h00") @[base-memory-components.scala 37:35]
    io.dmem.response.bits.data <= _T_1.bits.data @[base-memory-components.scala 37:20]
    io.dmem.response.valid <= _T_1.valid @[base-memory-components.scala 37:20]
    cmem memory : UInt<32>[16384] @[base-memory-components.scala 39:19]
    io.imem.response.valid <= UInt<1>("h00") @[memory.scala 17:27]
    io.imem.request.ready <= UInt<1>("h01") @[memory.scala 19:26]
    when io.imem.request.valid : @[memory.scala 25:32]
      node _T_2 = eq(io.imem.request.bits.operation, UInt<1>("h00")) @[memory.scala 30:30]
      node _T_3 = asUInt(reset) @[memory.scala 30:11]
      node _T_4 = or(_T_2, _T_3) @[memory.scala 30:11]
      node _T_5 = eq(_T_4, UInt<1>("h00")) @[memory.scala 30:11]
      when _T_5 : @[memory.scala 30:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:30 assert(request.operation === Read)\n") @[memory.scala 30:11]
        stop(clock, UInt<1>(1), 1) @[memory.scala 30:11]
        skip @[memory.scala 30:11]
      node _T_6 = lt(io.imem.request.bits.address, UInt<17>("h010000")) @[memory.scala 35:27]
      when _T_6 : @[memory.scala 35:37]
        io.imem.response.valid <= UInt<1>("h01") @[memory.scala 36:30]
        node _T_7 = shr(io.imem.request.bits.address, 2) @[memory.scala 37:60]
        node _T_8 = bits(_T_7, 13, 0) @[memory.scala 37:43]
        infer mport _T_9 = memory[_T_8], clock @[memory.scala 37:43]
        io.imem.response.bits.data <= _T_9 @[memory.scala 37:34]
        skip @[memory.scala 35:37]
      else : @[memory.scala 38:18]
        io.imem.response.valid <= UInt<1>("h00") @[memory.scala 39:30]
        skip @[memory.scala 38:18]
      skip @[memory.scala 25:32]
    else : @[memory.scala 41:16]
      io.imem.response.valid <= UInt<1>("h00") @[memory.scala 42:28]
      skip @[memory.scala 41:16]
    io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 17:27]
    io.dmem.request.ready <= UInt<1>("h01") @[memory.scala 19:26]
    when io.dmem.request.valid : @[memory.scala 52:32]
      node _T_10 = neq(io.dmem.request.bits.operation, UInt<1>("h01")) @[memory.scala 56:31]
      node _T_11 = asUInt(reset) @[memory.scala 56:12]
      node _T_12 = or(_T_10, _T_11) @[memory.scala 56:12]
      node _T_13 = eq(_T_12, UInt<1>("h00")) @[memory.scala 56:12]
      when _T_13 : @[memory.scala 56:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:56 assert (request.operation =/= Write)\n") @[memory.scala 56:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 56:12]
        skip @[memory.scala 56:12]
      node _T_14 = lt(io.dmem.request.bits.address, UInt<17>("h010000")) @[memory.scala 58:29]
      node _T_15 = asUInt(reset) @[memory.scala 58:12]
      node _T_16 = or(_T_14, _T_15) @[memory.scala 58:12]
      node _T_17 = eq(_T_16, UInt<1>("h00")) @[memory.scala 58:12]
      when _T_17 : @[memory.scala 58:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:58 assert (request.address < size.U)\n") @[memory.scala 58:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 58:12]
        skip @[memory.scala 58:12]
      node _T_18 = shr(io.dmem.request.bits.address, 2) @[memory.scala 61:58]
      node _T_19 = bits(_T_18, 13, 0) @[memory.scala 61:46]
      read mport _T_20 = memory[_T_19], clock @[memory.scala 61:46]
      io.dmem.response.bits.data <= _T_20 @[memory.scala 61:32]
      io.dmem.response.valid <= UInt<1>("h01") @[memory.scala 62:28]
      node _T_21 = eq(io.dmem.request.bits.operation, UInt<2>("h02")) @[memory.scala 65:29]
      when _T_21 : @[memory.scala 65:44]
        node _T_22 = shr(io.dmem.request.bits.address, 2) @[memory.scala 66:25]
        node _T_23 = bits(_T_22, 13, 0) @[memory.scala 66:13]
        infer mport _T_24 = memory[_T_23], clock @[memory.scala 66:13]
        _T_24 <= io.dmem.request.bits.writedata @[memory.scala 66:31]
        skip @[memory.scala 65:44]
      skip @[memory.scala 52:32]
    else : @[memory.scala 68:16]
      io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 69:28]
      skip @[memory.scala 68:16]
    
  module ICombinMemPort : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    wire _T : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>} @[base-memory-components.scala 52:31]
    _T.instruction <= UInt<32>("h00") @[base-memory-components.scala 52:31]
    _T.good <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _T.address <= UInt<32>("h00") @[base-memory-components.scala 52:31]
    io.pipeline.instruction <= _T.instruction @[base-memory-components.scala 52:15]
    io.pipeline.good <= _T.good @[base-memory-components.scala 52:15]
    _T.valid <= io.pipeline.valid @[base-memory-components.scala 52:15]
    _T.address <= io.pipeline.address @[base-memory-components.scala 52:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 57:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 57:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 57:15]
    when io.pipeline.valid : @[memory-combin-ports.scala 16:28]
      wire _T_1 : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>} @[memory-combin-ports.scala 17:23]
      _T_1.address <= io.pipeline.address @[memory-combin-ports.scala 18:23]
      _T_1.operation <= UInt<1>("h00") @[memory-combin-ports.scala 19:23]
      _T_1.writedata <= UInt<1>("h00") @[memory-combin-ports.scala 20:23]
      io.bus.request.bits.operation <= _T_1.operation @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.writedata <= _T_1.writedata @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.address <= _T_1.address @[memory-combin-ports.scala 22:26]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 23:26]
      skip @[memory-combin-ports.scala 16:28]
    else : @[memory-combin-ports.scala 24:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 25:26]
      skip @[memory-combin-ports.scala 24:16]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 29:20]
    io.pipeline.instruction <= io.bus.response.bits.data @[memory-combin-ports.scala 30:27]
    
  module DCombinMemPort : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    wire _T : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>} @[base-memory-components.scala 69:31]
    _T.readdata <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    _T.sext <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.maskmode <= UInt<2>("h00") @[base-memory-components.scala 69:31]
    _T.memwrite <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.memread <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.writedata <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    _T.good <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.address <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    io.pipeline.readdata <= _T.readdata @[base-memory-components.scala 69:15]
    _T.sext <= io.pipeline.sext @[base-memory-components.scala 69:15]
    _T.maskmode <= io.pipeline.maskmode @[base-memory-components.scala 69:15]
    _T.memwrite <= io.pipeline.memwrite @[base-memory-components.scala 69:15]
    _T.memread <= io.pipeline.memread @[base-memory-components.scala 69:15]
    _T.writedata <= io.pipeline.writedata @[base-memory-components.scala 69:15]
    io.pipeline.good <= _T.good @[base-memory-components.scala 69:15]
    _T.valid <= io.pipeline.valid @[base-memory-components.scala 69:15]
    _T.address <= io.pipeline.address @[base-memory-components.scala 69:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 74:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 74:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 74:15]
    io.pipeline.good <= io.bus.response.valid @[base-memory-components.scala 76:20]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 39:20]
    node _T_1 = or(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 41:51]
    node _T_2 = and(io.pipeline.valid, _T_1) @[memory-combin-ports.scala 41:27]
    when _T_2 : @[memory-combin-ports.scala 41:77]
      node _T_3 = and(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 43:34]
      node _T_4 = eq(_T_3, UInt<1>("h00")) @[memory-combin-ports.scala 43:12]
      node _T_5 = asUInt(reset) @[memory-combin-ports.scala 43:11]
      node _T_6 = or(_T_4, _T_5) @[memory-combin-ports.scala 43:11]
      node _T_7 = eq(_T_6, UInt<1>("h00")) @[memory-combin-ports.scala 43:11]
      when _T_7 : @[memory-combin-ports.scala 43:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory-combin-ports.scala:43 assert(!(io.pipeline.memread && io.pipeline.memwrite))\n") @[memory-combin-ports.scala 43:11]
        stop(clock, UInt<1>(1), 1) @[memory-combin-ports.scala 43:11]
        skip @[memory-combin-ports.scala 43:11]
      io.bus.request.bits.address <= io.pipeline.address @[memory-combin-ports.scala 45:33]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 46:26]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 48:33]
        io.bus.request.bits.operation <= UInt<2>("h02") @[memory-combin-ports.scala 57:37]
        skip @[memory-combin-ports.scala 48:33]
      else : @[memory-combin-ports.scala 58:18]
        io.bus.request.bits.operation <= UInt<1>("h00") @[memory-combin-ports.scala 60:37]
        skip @[memory-combin-ports.scala 58:18]
      skip @[memory-combin-ports.scala 41:77]
    else : @[memory-combin-ports.scala 62:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 64:26]
      skip @[memory-combin-ports.scala 62:16]
    when io.bus.response.valid : @[memory-combin-ports.scala 68:32]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 69:33]
        wire _T_8 : UInt<32> @[memory-combin-ports.scala 71:28]
        node _T_9 = neq(io.pipeline.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 74:34]
        when _T_9 : @[memory-combin-ports.scala 74:43]
          node _T_10 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 76:42]
          wire _T_11 : UInt<32> @[memory-combin-ports.scala 77:29]
          _T_11 <= io.bus.response.bits.data @[memory-combin-ports.scala 79:18]
          node _T_12 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 82:36]
          when _T_12 : @[memory-combin-ports.scala 82:45]
            node _T_13 = eq(_T_10, UInt<1>("h00")) @[memory-combin-ports.scala 83:23]
            when _T_13 : @[memory-combin-ports.scala 83:32]
              node _T_14 = bits(_T_11, 31, 8) @[memory-combin-ports.scala 84:38]
              node _T_15 = bits(io.pipeline.writedata, 7, 0) @[memory-combin-ports.scala 84:67]
              node _T_16 = cat(_T_14, _T_15) @[Cat.scala 29:58]
              _T_8 <= _T_16 @[memory-combin-ports.scala 84:23]
              skip @[memory-combin-ports.scala 83:32]
            else : @[memory-combin-ports.scala 85:38]
              node _T_17 = eq(_T_10, UInt<1>("h01")) @[memory-combin-ports.scala 85:29]
              when _T_17 : @[memory-combin-ports.scala 85:38]
                node _T_18 = bits(_T_11, 31, 16) @[memory-combin-ports.scala 86:38]
                node _T_19 = bits(io.pipeline.writedata, 15, 8) @[memory-combin-ports.scala 86:72]
                node _T_20 = bits(_T_11, 7, 0) @[memory-combin-ports.scala 86:88]
                node _T_21 = cat(_T_19, _T_20) @[Cat.scala 29:58]
                node _T_22 = cat(_T_18, _T_21) @[Cat.scala 29:58]
                _T_8 <= _T_22 @[memory-combin-ports.scala 86:23]
                skip @[memory-combin-ports.scala 85:38]
              else : @[memory-combin-ports.scala 87:38]
                node _T_23 = eq(_T_10, UInt<2>("h02")) @[memory-combin-ports.scala 87:29]
                when _T_23 : @[memory-combin-ports.scala 87:38]
                  node _T_24 = bits(_T_11, 31, 24) @[memory-combin-ports.scala 88:38]
                  node _T_25 = bits(io.pipeline.writedata, 23, 16) @[memory-combin-ports.scala 88:72]
                  node _T_26 = bits(_T_11, 15, 0) @[memory-combin-ports.scala 88:88]
                  node _T_27 = cat(_T_25, _T_26) @[Cat.scala 29:58]
                  node _T_28 = cat(_T_24, _T_27) @[Cat.scala 29:58]
                  _T_8 <= _T_28 @[memory-combin-ports.scala 88:23]
                  skip @[memory-combin-ports.scala 87:38]
                else : @[memory-combin-ports.scala 89:23]
                  node _T_29 = bits(io.pipeline.writedata, 31, 24) @[memory-combin-ports.scala 90:51]
                  node _T_30 = bits(_T_11, 23, 0) @[memory-combin-ports.scala 90:68]
                  node _T_31 = cat(_T_29, _T_30) @[Cat.scala 29:58]
                  _T_8 <= _T_31 @[memory-combin-ports.scala 90:23]
                  skip @[memory-combin-ports.scala 89:23]
            skip @[memory-combin-ports.scala 82:45]
          else : @[memory-combin-ports.scala 92:22]
            node _T_32 = eq(_T_10, UInt<1>("h00")) @[memory-combin-ports.scala 93:24]
            when _T_32 : @[memory-combin-ports.scala 93:33]
              node _T_33 = bits(_T_11, 31, 16) @[memory-combin-ports.scala 94:38]
              node _T_34 = bits(io.pipeline.writedata, 15, 0) @[memory-combin-ports.scala 94:67]
              node _T_35 = cat(_T_33, _T_34) @[Cat.scala 29:58]
              _T_8 <= _T_35 @[memory-combin-ports.scala 94:23]
              skip @[memory-combin-ports.scala 93:33]
            else : @[memory-combin-ports.scala 95:23]
              node _T_36 = bits(io.pipeline.writedata, 31, 16) @[memory-combin-ports.scala 96:51]
              node _T_37 = bits(_T_11, 15, 0) @[memory-combin-ports.scala 96:68]
              node _T_38 = cat(_T_36, _T_37) @[Cat.scala 29:58]
              _T_8 <= _T_38 @[memory-combin-ports.scala 96:23]
              skip @[memory-combin-ports.scala 95:23]
            skip @[memory-combin-ports.scala 92:22]
          skip @[memory-combin-ports.scala 74:43]
        else : @[memory-combin-ports.scala 99:20]
          _T_8 <= io.pipeline.writedata @[memory-combin-ports.scala 101:19]
          skip @[memory-combin-ports.scala 99:20]
        io.bus.request.bits.writedata <= _T_8 @[memory-combin-ports.scala 104:37]
        skip @[memory-combin-ports.scala 69:33]
      else : @[memory-combin-ports.scala 105:39]
        when io.pipeline.memread : @[memory-combin-ports.scala 105:39]
          wire _T_39 : UInt<32> @[memory-combin-ports.scala 107:36]
          wire _T_40 : UInt<32> @[memory-combin-ports.scala 108:36]
          node _T_41 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 110:39]
          node _T_42 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 111:34]
          when _T_42 : @[memory-combin-ports.scala 111:43]
            node _T_43 = mul(_T_41, UInt<4>("h08")) @[memory-combin-ports.scala 113:64]
            node _T_44 = dshr(io.bus.response.bits.data, _T_43) @[memory-combin-ports.scala 113:53]
            node _T_45 = and(_T_44, UInt<8>("h0ff")) @[memory-combin-ports.scala 113:72]
            _T_39 <= _T_45 @[memory-combin-ports.scala 113:23]
            skip @[memory-combin-ports.scala 111:43]
          else : @[memory-combin-ports.scala 114:50]
            node _T_46 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 114:41]
            when _T_46 : @[memory-combin-ports.scala 114:50]
              node _T_47 = mul(_T_41, UInt<4>("h08")) @[memory-combin-ports.scala 116:64]
              node _T_48 = dshr(io.bus.response.bits.data, _T_47) @[memory-combin-ports.scala 116:53]
              node _T_49 = and(_T_48, UInt<16>("h0ffff")) @[memory-combin-ports.scala 116:72]
              _T_39 <= _T_49 @[memory-combin-ports.scala 116:23]
              skip @[memory-combin-ports.scala 114:50]
            else : @[memory-combin-ports.scala 117:20]
              _T_39 <= io.bus.response.bits.data @[memory-combin-ports.scala 118:23]
              skip @[memory-combin-ports.scala 117:20]
          when io.pipeline.sext : @[memory-combin-ports.scala 121:31]
            node _T_50 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 122:36]
            when _T_50 : @[memory-combin-ports.scala 122:45]
              node _T_51 = bits(_T_39, 7, 7) @[memory-combin-ports.scala 124:59]
              node _T_52 = bits(_T_51, 0, 0) @[Bitwise.scala 71:15]
              node _T_53 = mux(_T_52, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 71:12]
              node _T_54 = bits(_T_39, 7, 0) @[memory-combin-ports.scala 124:79]
              node _T_55 = cat(_T_53, _T_54) @[Cat.scala 29:58]
              _T_40 <= _T_55 @[memory-combin-ports.scala 124:30]
              skip @[memory-combin-ports.scala 122:45]
            else : @[memory-combin-ports.scala 125:52]
              node _T_56 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 125:43]
              when _T_56 : @[memory-combin-ports.scala 125:52]
                node _T_57 = bits(_T_39, 15, 15) @[memory-combin-ports.scala 127:59]
                node _T_58 = bits(_T_57, 0, 0) @[Bitwise.scala 71:15]
                node _T_59 = mux(_T_58, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 71:12]
                node _T_60 = bits(_T_39, 15, 0) @[memory-combin-ports.scala 127:79]
                node _T_61 = cat(_T_59, _T_60) @[Cat.scala 29:58]
                _T_40 <= _T_61 @[memory-combin-ports.scala 127:30]
                skip @[memory-combin-ports.scala 125:52]
              else : @[memory-combin-ports.scala 128:22]
                _T_40 <= _T_39 @[memory-combin-ports.scala 130:30]
                skip @[memory-combin-ports.scala 128:22]
            skip @[memory-combin-ports.scala 121:31]
          else : @[memory-combin-ports.scala 132:20]
            _T_40 <= _T_39 @[memory-combin-ports.scala 133:28]
            skip @[memory-combin-ports.scala 132:20]
          io.pipeline.readdata <= _T_40 @[memory-combin-ports.scala 136:28]
          skip @[memory-combin-ports.scala 105:39]
      skip @[memory-combin-ports.scala 68:32]
    
  module Top : 
    input clock : Clock
    input reset : UInt<1>
    output io : {success : UInt<1>}
    
    io.success is invalid @[top.scala 12:14]
    inst cpu of SingleCycleCPU @[top.scala 14:20]
    cpu.clock <= clock
    cpu.reset <= reset
    inst mem of DualPortedCombinMemory @[top.scala 15:20]
    mem.clock <= clock
    mem.reset <= reset
    inst imem of ICombinMemPort @[top.scala 17:20]
    imem.clock <= clock
    imem.reset <= reset
    inst dmem of DCombinMemPort @[top.scala 18:20]
    dmem.clock <= clock
    dmem.reset <= reset
    mem.io.imem.request.bits.operation <= imem.io.bus.request.bits.operation @[base-memory-components.scala 16:26]
    mem.io.imem.request.bits.writedata <= imem.io.bus.request.bits.writedata @[base-memory-components.scala 16:26]
    mem.io.imem.request.bits.address <= imem.io.bus.request.bits.address @[base-memory-components.scala 16:26]
    mem.io.imem.request.valid <= imem.io.bus.request.valid @[base-memory-components.scala 16:26]
    imem.io.bus.request.ready <= mem.io.imem.request.ready @[base-memory-components.scala 16:26]
    imem.io.bus.response.bits.data <= mem.io.imem.response.bits.data @[base-memory-components.scala 17:26]
    imem.io.bus.response.valid <= mem.io.imem.response.valid @[base-memory-components.scala 17:26]
    mem.io.dmem.request.bits.operation <= dmem.io.bus.request.bits.operation @[base-memory-components.scala 19:26]
    mem.io.dmem.request.bits.writedata <= dmem.io.bus.request.bits.writedata @[base-memory-components.scala 19:26]
    mem.io.dmem.request.bits.address <= dmem.io.bus.request.bits.address @[base-memory-components.scala 19:26]
    mem.io.dmem.request.valid <= dmem.io.bus.request.valid @[base-memory-components.scala 19:26]
    dmem.io.bus.request.ready <= mem.io.dmem.request.ready @[base-memory-components.scala 19:26]
    dmem.io.bus.response.bits.data <= mem.io.dmem.response.bits.data @[base-memory-components.scala 20:26]
    dmem.io.bus.response.valid <= mem.io.dmem.response.valid @[base-memory-components.scala 20:26]
    cpu.io.imem.instruction <= imem.io.pipeline.instruction @[top.scala 21:15]
    cpu.io.imem.good <= imem.io.pipeline.good @[top.scala 21:15]
    imem.io.pipeline.valid <= cpu.io.imem.valid @[top.scala 21:15]
    imem.io.pipeline.address <= cpu.io.imem.address @[top.scala 21:15]
    cpu.io.dmem.readdata <= dmem.io.pipeline.readdata @[top.scala 22:15]
    dmem.io.pipeline.sext <= cpu.io.dmem.sext @[top.scala 22:15]
    dmem.io.pipeline.maskmode <= cpu.io.dmem.maskmode @[top.scala 22:15]
    dmem.io.pipeline.memwrite <= cpu.io.dmem.memwrite @[top.scala 22:15]
    dmem.io.pipeline.memread <= cpu.io.dmem.memread @[top.scala 22:15]
    dmem.io.pipeline.writedata <= cpu.io.dmem.writedata @[top.scala 22:15]
    cpu.io.dmem.good <= dmem.io.pipeline.good @[top.scala 22:15]
    dmem.io.pipeline.valid <= cpu.io.dmem.valid @[top.scala 22:15]
    dmem.io.pipeline.address <= cpu.io.dmem.address @[top.scala 22:15]
    
